{"version":3,"sources":["PersonalKanban/services/StorageService.ts","PersonalKanban/providers/ThemeProvider.tsx","PersonalKanban/components/IconButton/IconButton.tsx","PersonalKanban/components/IconButton/index.tsx","PersonalKanban/components/Card/Card.tsx","PersonalKanban/components/Card/index.ts","PersonalKanban/enums/index.tsx","PersonalKanban/components/Radio/Radio.tsx","PersonalKanban/components/Radio/index.tsx","PersonalKanban/providers/TranslationProvider.tsx","PersonalKanban/components/ColumnForm/index.tsx","PersonalKanban/components/ColumnForm/ColumnForm.tsx","PersonalKanban/components/RecordForm/index.tsx","PersonalKanban/components/RecordForm/RecordForm.tsx","PersonalKanban/components/Column/Column.tsx","PersonalKanban/components/Column/index.tsx","PersonalKanban/components/Board/Board.tsx","PersonalKanban/constants/index.tsx","PersonalKanban/components/Board/index.ts","PersonalKanban/components/KanbanCard/index.tsx","PersonalKanban/components/KanbanCard/KanbanCard.tsx","PersonalKanban/components/KanbanColumn/KanbanColumn.tsx","PersonalKanban/components/KanbanColumn/index.tsx","PersonalKanban/components/KanbanBoard/index.tsx","PersonalKanban/components/KanbanBoard/KanbanBoard.tsx","PersonalKanban/services/Utils.ts","PersonalKanban/containers/Toolbar/index.tsx","PersonalKanban/containers/KanbanBoard/title.tsx","PersonalKanban/containers/KanbanBoard/index.tsx","PersonalKanban/index.tsx","index.tsx"],"names":["DARK_MODE","COLUMNS","title","isShare","isRresh","getItem","key","JSON","parse","localStorage","setItem","value","stringify","getColumns","saveData","content","save","data","type","window","parent","postMessage","StorageService","getDarkMode","setDarkMode","setColumns","getTitle","setTitle","setShare","setRefresh","isRefresh","saveShare","ThemeContext","React","createContext","useTheme","useContext","ThemeProvider","props","children","useState","darkTheme","setDarkTheme","handleToggleDarkTheme","useCallback","theme","createMuiTheme","palette","primary","lightGreen","brown","secondary","blueGrey","overrides","MuiPaper","root","cursor","padding","MuiDivider","backgroundColor","typography","fontFamily","fontWeightLight","fontWeightMedium","fontWeightRegular","fontWeightBold","light","MuiTextField","variant","margin","fullWidth","MuiButton","size","MuiRadio","custom","colors","pastel","violet","purple","pastelCode","indigo","blue","green","yellow","orange","red","useMemo","Provider","CssBaseline","icons","edit","EditIcon","delete","DeleteIcon","add","AddIcon","deleteSweep","DeleteSweepIcon","deleteForever","DeleteForeverIcon","invertColors","InvertColorsIcon","invertColorsOff","InvertColorsOffIcon","gitHub","GitHubIcon","language","LanguageIcon","personalKanban","DeveloperBoardIcon","info","InfoIcon","list","ListIcon","SaveIcon","IconButton","icon","iconProps","rest","Icon","fontSize","useStyles","makeStyles","paper","height","description","maxHeight","minHeight","display","overflow","whiteSpace","Card","record","className","innerRef","style","showEditAction","showDeleteAction","onDelete","onEdit","createdAt","classes","handleEdit","handleDelete","Paper","clsx","ref","Box","alignItems","justifyContent","Typography","gutterBottom","noWrap","onClick","component","defaultProps","RecordColor","Purple","RECORD_SHADE","Indigo","Blue","Green","Yellow","Orange","Red","Default","DarkRecordColor","DARK_RECORD_SHADE","ColumnColor","COLUMN_SHADE","DarkColumnColor","DARK_COLUMN_SHADE","color","checked","Radio","forwardRef","i18n","i18next","createInstance","use","initReactI18next","LanguageDetector","init","fallbackLng","resources","cn","translation","de","en","es","fr","in","ind","jp","ru","interpolation","escapeValue","TranslationProvider","I18nextProvider","ColumnForm","t","useTranslation","column","disabled","formTitle","onSubmit","onCancel","useFormik","initialValues","Object","assign","wipEnabled","wipLimit","values","validate","errors","handleChange","handleSubmit","handleWipLimitChange","e","persist","target","test","Grid","container","spacing","item","xs","Divider","TextField","name","label","error","Boolean","helperText","onChange","multiline","rows","FormControlLabel","control","Checkbox","FormControl","FormLabel","RadioGroup","row","aria-label","keys","map","colorKey","Button","RecordForm","useColumnHeaderStyles","divider","marginTop","marginBottom","ColumnHeader","useColumnActionStyles","ColumnAction","showAddRecordAction","showAllRecordDeleteAction","disableAllRecordDeleteAction","disableAddRecordAction","onAddRecord","onDeleteAllRecord","useColumnCardListStyles","card","ColumnCardList","CardComponent","onRecordEdit","onRecordDelete","records","length","index","id","useColumnFooterStyles","ColumnFooter","useColumnStyles","Column","onAllRecordDelete","showDeleteAllRecordAction","ColumnHeaderComponent","ColumnActionComponent","ColumnCardListComponent","ColumnFooterComponent","caption","Infinity","columnColor","open","actions","dialog","setDialog","handleAddRecord","handleRecordEdit","handleRecordDelete","handleAllRecordDelete","handleOpenDialog","handleCloseDialog","handleOpenDeleteDialog","handleOpenEditDialog","handleOpenAddRecordDialog","handleOpenEditRecordDialog","handleOpenDeleteRecordDialog","handleOpenDeleteAllRecordDialog","elevation","Dialog","onClose","DialogTitle","DialogContent","DialogActions","useBoardStyles","width","Board","columns","ColumnComponent","placeholder","onColumnEdit","onColumnDelete","KanbanCard","recordColor","draggableId","provided","draggableProps","dragHandleProps","KanbanInnerColumnCardList","memo","KanbanColumnCardList","columnId","isDropDisabled","droppableId","droppableProps","KanbanColumn","_column","KanbanBoard","onCardMove","onColumnMove","getColumnById","find","getColumnByIndex","handleDragEnd","result","source","destination","onDragEnd","direction","getId","uuidv4","reorder","startIndex","endIndex","Array","from","splice","removed","getCreatedAt","moment","format","AddColumnButton","setOpen","ClearBoardButton","onClear","handleClear","LanguageButton","anchorEl","setAnchorEl","handleClose","handleChangeLanguage","lng","changeLanguage","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","MenuItem","DarkThemeButton","SaveButton","TitleInput","useToolbarStyles","Toolbar","clearButtonDisabled","onNewColumn","onClearBoard","AppBar","disableRipple","disableTouchRipple","disableFocusRipple","flexGrow","TitleContext","TitleContextProvider","contextValue","useKanbanBoardStyles","toolbar","mixins","initialState","KanbanBoardContainer","EventHandler","eventData","console","log","baseTitle","substring","lastIndexOf","str","trim","btoa","atob","err","isBase64","base64String","repeat","binaryString","bytes","Uint8Array","i","charCodeAt","TextDecoder","decode","decodeBase64","addEventListener","removeEventListener","cloneColumns","getColumnIndex","findIndex","c","getRecordIndex","recordId","r","handleClearBoard","handleAddColumn","handleColumnMove","updatedColumns","handleColumnEdit","_columns","columnIndex","handleColumnDelete","handleCardMove","sourceColumn","destinationColumn","sourceIndex","destinationIndex","getRecords","current","next","reordered","newColumns","reorderCards","recordIndex","_record","useEffect","PersonalKanban","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2211502.chunk.js","sourcesContent":["import { Column } from \"PersonalKanban/types\";\r\n\r\nconst DARK_MODE = \"dark_mode\";\r\nconst COLUMNS = \"columns\";\r\nlet title = \"未命名看板\";\r\nlet isShare = false;\r\nlet isRresh = false;\r\nexport function getTitle() {\r\n  return title;\r\n}\r\nexport function setTitle(value: string) {\r\n  title = value;\r\n}\r\nexport function setShare(data: any) {\r\n  isShare = data.isShare === true;\r\n}\r\nexport function setRefresh(data: any) {\r\n  isRresh = data.isRefresh === true;\r\n}\r\nexport function getItem(key: string) {\r\n  return JSON.parse(localStorage.getItem(key)!);\r\n}\r\n\r\nexport function setItem(key: string, value: any) {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\nexport function getDarkMode() {\r\n  return getItem(DARK_MODE);\r\n}\r\n\r\nexport function setDarkMode(value: boolean) {\r\n  return setItem(DARK_MODE, value);\r\n}\r\n\r\nexport function setColumns(value: Column[]) {\r\n  return setItem(COLUMNS, value);\r\n}\r\nexport function saveShare(){\r\n  if(isShare) {\r\n    if(isRresh) {\r\n      isRresh = false;\r\n      return;\r\n    }\r\n    saveData();\r\n  }\r\n}\r\nexport function getColumns() {\r\n  return getItem(COLUMNS);\r\n}\r\nexport function saveData() {\r\n  const content = getColumns();\r\n  const save = {\r\n    data: JSON.stringify({ content, title, isShare }),\r\n    type: 'exportKanban'\r\n  }\r\n  window.parent.postMessage(save, '*')\r\n}\r\n\r\nconst StorageService = {\r\n  getItem,\r\n  setItem,\r\n  getDarkMode,\r\n  setDarkMode,\r\n  getColumns,\r\n  setColumns,\r\n  saveData,\r\n  getTitle,\r\n  setTitle,\r\n  setShare,\r\n  setRefresh,\r\n  saveShare\r\n};\r\n\r\nexport default StorageService;\r\n","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  purple,\r\n  indigo,\r\n  blue,\r\n  green,\r\n  yellow,\r\n  orange,\r\n  red,\r\n  brown,\r\n  blueGrey,\r\n  lightGreen,\r\n} from \"@material-ui/core/colors\";\r\n\r\nimport StorageService from \"PersonalKanban/services/StorageService\";\r\n\r\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\r\n  interface Theme {\r\n    custom?: any;\r\n  }\r\n  interface ThemeOptions {\r\n    custom?: any;\r\n  }\r\n}\r\n\r\nconst ThemeContext = React.createContext({});\r\n\r\ntype ThemeProviderProps = {\r\n  darkTheme?: boolean;\r\n};\r\n\r\nconst pastelCode = 200;\r\n\r\nconst ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\r\n  const { children } = props;\r\n\r\n  const [darkTheme, setDarkTheme] = React.useState(\r\n    props.darkTheme || StorageService.getDarkMode()\r\n  );\r\n\r\n  const handleToggleDarkTheme = React.useCallback(() => {\r\n    setDarkTheme((darkTheme: Boolean | undefined) => {\r\n      StorageService.setDarkMode(!darkTheme);\r\n      return !darkTheme;\r\n    });\r\n  }, []);\r\n\r\n  const theme: Theme = createMuiTheme({\r\n    palette: {\r\n      primary: darkTheme ? lightGreen : brown,\r\n      secondary: blueGrey,\r\n      type: darkTheme ? \"dark\" : \"light\",\r\n    },\r\n    overrides: {\r\n      MuiPaper: {\r\n        root: {\r\n          cursor: \"pointer\",\r\n          padding: 8,\r\n        },\r\n      },\r\n      MuiDivider: {\r\n        root: {\r\n          backgroundColor: \"rgba(255,255,255,0.5)\",\r\n        },\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily: \"'Nunito', sans-serif\",\r\n      fontWeightLight: 300,\r\n      fontWeightMedium: 400,\r\n      fontWeightRegular: 400,\r\n      fontWeightBold: 700,\r\n    },\r\n    props: {\r\n      MuiDivider: {\r\n        light: darkTheme ? false : true,\r\n      },\r\n      MuiTextField: {\r\n        variant: \"outlined\",\r\n        margin: \"dense\",\r\n        fullWidth: true,\r\n      },\r\n      MuiButton: {\r\n        size: \"small\",\r\n      },\r\n      MuiRadio: {\r\n        size: \"small\",\r\n      },\r\n    },\r\n    custom: {\r\n      colors: {\r\n        pastel: {\r\n          violet: purple[pastelCode],\r\n          indigo: indigo[pastelCode],\r\n          blue: blue[pastelCode],\r\n          green: green[pastelCode],\r\n          yellow: yellow[pastelCode],\r\n          orange: orange[pastelCode],\r\n          red: red[pastelCode],\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      darkTheme,\r\n      handleToggleDarkTheme,\r\n    }),\r\n    [darkTheme, handleToggleDarkTheme]\r\n  );\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = (): any => React.useContext(ThemeContext);\r\n\r\nexport default ThemeProvider;\r\n","import React from \"react\";\r\nimport MuiIconButton, {\r\n  IconButtonProps as MuiIconButtonProps,\r\n} from \"@material-ui/core/IconButton\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\r\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\r\nimport InvertColorsOffIcon from \"@material-ui/icons/InvertColorsOff\";\r\nimport LanguageIcon from \"@material-ui/icons/Translate\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport DeveloperBoardIcon from \"@material-ui/icons/DeveloperBoard\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport SaveIcon from \"@material-ui/icons/SaveRounded\";\r\nconst icons = {\r\n  edit: EditIcon,\r\n  delete: DeleteIcon,\r\n  add: AddIcon,\r\n  deleteSweep: DeleteSweepIcon,\r\n  deleteForever: DeleteForeverIcon,\r\n  invertColors: InvertColorsIcon,\r\n  invertColorsOff: InvertColorsOffIcon,\r\n  gitHub: GitHubIcon,\r\n  language: LanguageIcon,\r\n  personalKanban: DeveloperBoardIcon,\r\n  info: InfoIcon,\r\n  list: ListIcon,\r\n  save: SaveIcon\r\n};\r\n\r\ntype IconButtonProps = MuiIconButtonProps & {\r\n  icon: keyof typeof icons;\r\n  iconProps?: any;\r\n  component?: any;\r\n  href?: string;\r\n  target?: string;\r\n};\r\n\r\nconst IconButton: React.FC<IconButtonProps> = (props) => {\r\n  const { icon, iconProps = {}, ...rest } = props;\r\n  const Icon = icons[icon];\r\n  return Icon ? (\r\n    <MuiIconButton size=\"small\" {...rest}>\r\n      <Icon fontSize=\"small\" {...iconProps} />\r\n    </MuiIconButton>\r\n  ) : null;\r\n};\r\n\r\nexport default IconButton;\r\n","import IconButton from \"./IconButton\";\r\n\r\nexport default IconButton;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Record } from \"PersonalKanban/types\";\r\nimport IconButton from \"PersonalKanban/components/IconButton\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  paper: {\r\n    height: 150,\r\n  },\r\n  description: {\r\n    maxHeight: \"5rem\",\r\n    minHeight: \"5rem\",\r\n    display: \"-webkit-box\",\r\n    \"-webkit-line-clamp\": 4,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"pre-line\",\r\n  },\r\n}));\r\n\r\ntype CardProps = {\r\n  record: Record;\r\n  className?: string;\r\n  style?: any;\r\n  innerRef?: any;\r\n  showEditAction?: boolean;\r\n  showDeleteAction?: boolean;\r\n  onDelete?: any;\r\n  onEdit?: any;\r\n};\r\n\r\nconst Card: React.FC<CardProps> = (props) => {\r\n  const {\r\n    record,\r\n    className,\r\n    innerRef,\r\n    style,\r\n    showEditAction,\r\n    showDeleteAction,\r\n    onDelete,\r\n    onEdit,\r\n    ...rest\r\n  } = props;\r\n  const { title, description, createdAt } = record;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleEdit = React.useCallback(() => onEdit(record), [record, onEdit]);\r\n\r\n  const handleDelete = React.useCallback(() => onDelete(record), [\r\n    record,\r\n    onDelete,\r\n  ]);\r\n\r\n  return (\r\n    <Paper\r\n      className={clsx(classes.paper, className)}\r\n      style={style}\r\n      ref={innerRef}\r\n      {...rest}\r\n    >\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Typography title={title} gutterBottom noWrap>\r\n          <b>{title}</b>\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {showEditAction && <IconButton icon=\"edit\" onClick={handleEdit} />}\r\n          {showDeleteAction && (\r\n            <IconButton icon=\"deleteForever\" onClick={handleDelete} />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      <Typography\r\n        title={description}\r\n        className={classes.description}\r\n        variant=\"body2\"\r\n        gutterBottom\r\n      >\r\n        {description}\r\n      </Typography>\r\n      <Typography component=\"p\" variant=\"caption\" noWrap>\r\n        {createdAt}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n  showDeleteAction: true,\r\n  showEditAction: true,\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nexport default Card;\r\n","import purple from \"@material-ui/core/colors/purple\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport yellow from \"@material-ui/core/colors/yellow\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport red from \"@material-ui/core/colors/red\";\r\n\r\nconst RECORD_SHADE = 200;\r\n\r\nexport const RecordColor = {\r\n  Purple: purple[RECORD_SHADE],\r\n  Indigo: indigo[RECORD_SHADE],\r\n  Blue: blue[RECORD_SHADE],\r\n  Green: green[RECORD_SHADE],\r\n  Yellow: yellow[RECORD_SHADE],\r\n  Orange: orange[RECORD_SHADE],\r\n  Red: red[RECORD_SHADE],\r\n  Default: \"\",\r\n};\r\n\r\nexport const DARK_RECORD_SHADE = 500;\r\n\r\nexport const DarkRecordColor = {\r\n  Purple: purple[DARK_RECORD_SHADE],\r\n  Indigo: indigo[DARK_RECORD_SHADE],\r\n  Blue: blue[DARK_RECORD_SHADE],\r\n  Green: green[DARK_RECORD_SHADE],\r\n  Yellow: yellow[700],\r\n  Orange: orange[DARK_RECORD_SHADE],\r\n  Red: red[DARK_RECORD_SHADE],\r\n  Default: \"\",\r\n};\r\n\r\nconst COLUMN_SHADE = 100;\r\n\r\nexport const ColumnColor = {\r\n  Purple: purple[COLUMN_SHADE],\r\n  Indigo: indigo[COLUMN_SHADE],\r\n  Blue: blue[COLUMN_SHADE],\r\n  Green: green[COLUMN_SHADE],\r\n  Yellow: yellow[COLUMN_SHADE],\r\n  Orange: orange[COLUMN_SHADE],\r\n  Red: red[COLUMN_SHADE],\r\n  Default: \"\",\r\n};\r\n\r\nexport const DARK_COLUMN_SHADE = 400;\r\n\r\nexport const DarkColumnColor = {\r\n  Purple: purple[DARK_COLUMN_SHADE],\r\n  Indigo: indigo[DARK_COLUMN_SHADE],\r\n  Blue: blue[DARK_COLUMN_SHADE],\r\n  Green: green[DARK_COLUMN_SHADE],\r\n  Yellow: yellow[700],\r\n  Orange: orange[DARK_COLUMN_SHADE],\r\n  Red: red[DARK_COLUMN_SHADE],\r\n  Default: \"\",\r\n};\r\n","import React from \"react\";\r\nimport MuiRadio, { RadioProps as MuiRadioProps } from \"@material-ui/core/Radio\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    color: (props: any) => props.color,\r\n  },\r\n  checked: {},\r\n}));\r\n\r\ntype RadioProps = Omit<MuiRadioProps, \"color\"> & { color?: string };\r\n\r\nconst Radio = React.forwardRef((props: RadioProps, ref: any) => {\r\n  const { color, ...rest } = props;\r\n\r\n  const classes = useStyles({ color });\r\n\r\n  return (\r\n    <MuiRadio\r\n      ref={ref}\r\n      color=\"default\"\r\n      classes={color ? classes : {}}\r\n      {...rest}\r\n    />\r\n  );\r\n});\r\n\r\nexport default Radio;\r\n","import Radio from './Radio';\r\n\r\nexport default Radio","import React from \"react\";\r\nimport { I18nextProvider, initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport i18next from \"i18next\";\r\n\r\nimport cn from \"PersonalKanban/assets/locales/cn/translations.json\";\r\nimport de from \"PersonalKanban/assets/locales/de/translations.json\";\r\nimport en from \"PersonalKanban/assets/locales/en/translations.json\";\r\nimport es from \"PersonalKanban/assets/locales/es/translations.json\";\r\nimport fr from \"PersonalKanban/assets/locales/fr/translations.json\";\r\nimport ind from \"PersonalKanban/assets/locales/in/translations.json\";\r\nimport ru from \"PersonalKanban/assets/locales/ru/translations.json\";\r\nimport jp from \"PersonalKanban/assets/locales/jp/translations.json\";\r\n\r\nexport { useTranslation } from \"react-i18next\";\r\n\r\nconst i18n = i18next.createInstance();\r\n\r\ni18n\r\n  .use(initReactI18next)\r\n  .use(LanguageDetector)\r\n  .init({\r\n    fallbackLng: \"cn\",\r\n    resources: {\r\n      cn: { translation: { ...cn } },\r\n      de: { translation: { ...de } },\r\n      en: { translation: { ...en } },\r\n      es: { translation: { ...es } },\r\n      fr: { translation: { ...fr } },\r\n      in: { translation: { ...ind } },\r\n      jp: { translation: { ...jp } },\r\n      ru: { translation: { ...ru } },\r\n    },\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\ntype TranslationProviderProps = {};\r\n\r\nconst TranslationProvider: React.FC<TranslationProviderProps> = ({\r\n  children,\r\n}) => {\r\n  return <I18nextProvider i18n={i18n}>{children}</I18nextProvider>;\r\n};\r\n\r\nexport default TranslationProvider;\r\n","import ColumnForm from \"./ColumnForm\";\r\n\r\nexport default ColumnForm;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport { Column } from \"PersonalKanban/types\";\r\nimport { ColumnColor } from \"PersonalKanban/enums/index\";\r\nimport Radio from \"PersonalKanban/components/Radio\";\r\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\r\n\r\ntype ColumnFormProps = {\r\n  column?: Partial<Column>;\r\n  onSubmit: any;\r\n  onCancel: any;\r\n  disabled?: boolean;\r\n  formTitle?: string;\r\n};\r\n\r\nconst ColumnForm: React.FC<ColumnFormProps> = (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const {\r\n    column,\r\n    disabled,\r\n    formTitle = t(\"addColumn\"),\r\n    onSubmit,\r\n    onCancel,\r\n  } = props;\r\n\r\n  const { values, errors, handleChange, handleSubmit } = useFormik({\r\n    initialValues: Object.assign(\r\n      {\r\n        title: \"\",\r\n        description: \"\",\r\n        color: \"\",\r\n        wipEnabled: false,\r\n        wipLimit: 0,\r\n      },\r\n      column\r\n    ),\r\n    onSubmit: (values) => {\r\n      onSubmit && onSubmit(values);\r\n    },\r\n    validate: (values) => {\r\n      const errors: any = {};\r\n      if (!values.title) {\r\n        errors.title = t(\"titleRequired\");\r\n      }\r\n\r\n      if (values.wipEnabled && !values.wipLimit) {\r\n        errors.wipLimit = t(\"limitRequired\");\r\n      }\r\n\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  const handleWipLimitChange = React.useCallback(\r\n    (e) => {\r\n      e.persist();\r\n      const { value } = e.target;\r\n      const integerRegex = /^[0-9]*$/;\r\n      if (value && !integerRegex.test(value)) {\r\n        return;\r\n      }\r\n\r\n      handleChange(e);\r\n    },\r\n    [handleChange]\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            {formTitle}\r\n          </Typography>\r\n          <Divider />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"title\"\r\n            label={t(\"title\")}\r\n            value={values.title}\r\n            error={Boolean(errors.title)}\r\n            helperText={errors.title}\r\n            disabled={disabled}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            multiline\r\n            rows={3}\r\n            name=\"description\"\r\n            label={t(\"description\")}\r\n            value={values.description}\r\n            error={Boolean(errors.description)}\r\n            helperText={errors.description}\r\n            disabled={disabled}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={values.wipEnabled}\r\n                onChange={handleChange}\r\n                name=\"wipEnabled\"\r\n              />\r\n            }\r\n            label={t(\"wipLimitEnabled\")}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"wipLimit\"\r\n            label={t(\"wipLimit\")}\r\n            value={values.wipLimit}\r\n            error={Boolean(errors.wipLimit)}\r\n            helperText={errors.wipLimit}\r\n            disabled={disabled || !values.wipEnabled}\r\n            onChange={handleWipLimitChange}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">{t(\"background\")}</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"background\"\r\n              name=\"color\"\r\n              value={values.color}\r\n              onChange={handleChange}\r\n            >\r\n              {Object.keys(ColumnColor).map((key) => {\r\n                const colorKey = key as keyof typeof ColumnColor;\r\n                return (\r\n                  <Radio\r\n                    key={colorKey}\r\n                    value={colorKey}\r\n                    color={ColumnColor[colorKey]}\r\n                  />\r\n                );\r\n              })}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          &nbsp;\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={disabled}\r\n          >\r\n            {t(\"submit\")}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ColumnForm;\r\n","import RecordForm from \"./RecordForm\";\r\n\r\nexport default RecordForm;\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nimport { Record } from \"PersonalKanban/types\";\r\nimport { RecordColor } from \"PersonalKanban/enums\";\r\nimport Radio from \"PersonalKanban/components/Radio\";\r\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\r\n\r\ntype RecordFormProps = {\r\n  record?: Record;\r\n  onSubmit: any;\r\n  onCancel?: any;\r\n  disabled?: boolean;\r\n  formTitle?: string;\r\n};\r\n\r\nconst RecordForm: React.FC<RecordFormProps> = (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const {\r\n    record,\r\n    disabled,\r\n    formTitle = t(\"addRecord\"),\r\n    onSubmit,\r\n    onCancel,\r\n  } = props;\r\n\r\n  const { values, errors, handleChange, handleSubmit } = useFormik({\r\n    initialValues: Object.assign(\r\n      {\r\n        title: \"\",\r\n        description: \"\",\r\n        color: \"\",\r\n      },\r\n      record\r\n    ),\r\n    onSubmit: (values) => {\r\n      onSubmit && onSubmit(values);\r\n    },\r\n    validate: (values) => {\r\n      const errors: any = {};\r\n      if (!values.title) {\r\n        errors.title = t(\"titleRequired\");\r\n      }\r\n\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            {formTitle}\r\n          </Typography>\r\n          <Divider />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"title\"\r\n            label={t(\"title\")}\r\n            value={values.title}\r\n            error={Boolean(errors.title)}\r\n            helperText={errors.title}\r\n            disabled={disabled}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            multiline\r\n            rows={3}\r\n            name=\"description\"\r\n            label={t(\"description\")}\r\n            value={values.description}\r\n            error={Boolean(errors.description)}\r\n            helperText={errors.description}\r\n            disabled={disabled}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">{t(\"background\")}</FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-label=\"background\"\r\n              name=\"color\"\r\n              value={values.color}\r\n              onChange={handleChange}\r\n            >\r\n              {Object.keys(RecordColor).map((key) => {\r\n                const colorKey = key as keyof typeof RecordColor;\r\n                return (\r\n                  <Radio\r\n                    key={colorKey}\r\n                    value={colorKey}\r\n                    color={RecordColor[colorKey]}\r\n                  />\r\n                );\r\n              })}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          &nbsp;\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            disabled={disabled}\r\n          >\r\n            {t(\"submit\")}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RecordForm;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Card from \"PersonalKanban/components/Card\";\r\nimport IconButton from \"PersonalKanban/components/IconButton\";\r\nimport ColumnForm from \"PersonalKanban/components/ColumnForm\";\r\nimport RecordForm from \"PersonalKanban/components/RecordForm\";\r\nimport { ColumnColor, DarkColumnColor } from \"PersonalKanban/enums\";\r\nimport { Record, Column as ColumnType } from \"PersonalKanban/types\";\r\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\r\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\r\n\r\nconst useColumnHeaderStyles = makeStyles((theme) => ({\r\n  divider: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\ntype ColumnHeaderProps = {\r\n  title: string;\r\n  description?: string;\r\n  onEdit?: any;\r\n  onDelete?: any;\r\n  showEditAction?: boolean;\r\n  showDeleteAction?: boolean;\r\n};\r\n\r\nexport const ColumnHeader: React.FC<ColumnHeaderProps> = (props) => {\r\n  const {\r\n    title,\r\n    description,\r\n    showEditAction,\r\n    showDeleteAction,\r\n    onEdit,\r\n    onDelete,\r\n  } = props;\r\n\r\n  const classes = useColumnHeaderStyles();\r\n  return (\r\n    <>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        marginBottom={Boolean(description) ? 0.5 : 0}\r\n      >\r\n        <Typography variant=\"h6\" title={title} noWrap>\r\n          <b>{title}</b>\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {showEditAction && <IconButton icon=\"edit\" onClick={onEdit} />}\r\n          {showDeleteAction && (\r\n            <IconButton icon=\"deleteForever\" onClick={onDelete} />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      <Typography title={description} noWrap gutterBottom>\r\n        {description}\r\n      </Typography>\r\n\r\n      <Divider className={classes.divider} />\r\n    </>\r\n  );\r\n};\r\n\r\nColumnHeader.defaultProps = { showEditAction: true, showDeleteAction: true };\r\n\r\nconst useColumnActionStyles = makeStyles((theme) => ({\r\n  divider: {\r\n    marginTop: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\ntype ColumnActionProps = {\r\n  onAddRecord?: any;\r\n  onDeleteAllRecord?: any;\r\n  showAddRecordAction?: boolean;\r\n  showAllRecordDeleteAction?: boolean;\r\n  disableAllRecordDeleteAction?: boolean;\r\n  disableAddRecordAction?: boolean;\r\n};\r\n\r\nexport const ColumnAction: React.FC<ColumnActionProps> = (props) => {\r\n  const {\r\n    showAddRecordAction,\r\n    showAllRecordDeleteAction,\r\n    disableAllRecordDeleteAction,\r\n    disableAddRecordAction,\r\n    onAddRecord,\r\n    onDeleteAllRecord,\r\n  } = props;\r\n  const classes = useColumnActionStyles();\r\n  return (\r\n    <>\r\n      {showAddRecordAction && (\r\n        <IconButton\r\n          icon=\"add\"\r\n          disabled={disableAddRecordAction}\r\n          onClick={onAddRecord}\r\n        />\r\n      )}\r\n      {showAllRecordDeleteAction && (\r\n        <IconButton\r\n          icon=\"delete\"\r\n          disabled={disableAllRecordDeleteAction}\r\n          onClick={onDeleteAllRecord}\r\n        />\r\n      )}\r\n\r\n      <Divider className={classes.divider} />\r\n    </>\r\n  );\r\n};\r\n\r\nColumnAction.defaultProps = {\r\n  showAddRecordAction: true,\r\n  showAllRecordDeleteAction: true,\r\n};\r\n\r\nconst useColumnCardListStyles = makeStyles((theme) => ({\r\n  card: {\r\n    marginBottom: theme.spacing(),\r\n  },\r\n}));\r\n\r\ntype ColumnCardListProps = {\r\n  column: ColumnType;\r\n  innerRef?: any;\r\n  CardComponent?: any;\r\n  onRecordEdit?: any;\r\n  onRecordDelete?: any;\r\n};\r\n\r\nexport const ColumnCardList: React.FC<ColumnCardListProps> = (props) => {\r\n  const {\r\n    column,\r\n    innerRef,\r\n    CardComponent = Card,\r\n    onRecordEdit,\r\n    onRecordDelete,\r\n  } = props;\r\n  const { records = [] } = column;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const classes = useColumnCardListStyles();\r\n\r\n  return (\r\n    <div ref={innerRef}>\r\n      {records && records.length ? (\r\n        records.map((record: Record, index) => (\r\n          <CardComponent\r\n            key={record.id}\r\n            record={record}\r\n            className={classes.card}\r\n            index={index}\r\n            onEdit={onRecordEdit}\r\n            onDelete={onRecordDelete}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Typography>{t(\"noRecord\")}</Typography>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useColumnFooterStyles = makeStyles((theme) => ({\r\n  divider: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\ntype ColumnFooterProps = {\r\n  content?: string;\r\n};\r\n\r\nexport const ColumnFooter: React.FC<ColumnFooterProps> = (props) => {\r\n  const { content } = props;\r\n\r\n  const classes = useColumnFooterStyles();\r\n  return (\r\n    <>\r\n      <Divider className={classes.divider} />\r\n      <Typography variant=\"caption\" component=\"p\" title={content} noWrap>\r\n        {content}\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useColumnStyles = makeStyles(() => ({\r\n  paper: (props: any) => ({\r\n    backgroundColor: props.backgroundColor,\r\n  }),\r\n}));\r\n\r\ntype ColumnProps = {\r\n  column: ColumnType;\r\n  className?: string;\r\n  innerRef?: any;\r\n  onEdit?: any;\r\n  onDelete?: any;\r\n  onAddRecord?: any;\r\n  onRecordEdit?: any;\r\n  onRecordDelete?: any;\r\n  onAllRecordDelete?: any;\r\n  showEditAction?: boolean;\r\n  showDeleteAction?: boolean;\r\n  showAddRecordAction?: boolean;\r\n  showDeleteAllRecordAction?: boolean;\r\n  ColumnHeaderComponent?: any;\r\n  ColumnActionComponent?: any;\r\n  ColumnCardListComponent?: any;\r\n  ColumnFooterComponent?: any;\r\n};\r\n\r\nconst Column: React.FC<ColumnProps> = (props) => {\r\n  const {\r\n    column,\r\n    className,\r\n    innerRef,\r\n    onEdit,\r\n    onDelete,\r\n    onAddRecord,\r\n    onAllRecordDelete,\r\n    showDeleteAction,\r\n    showEditAction,\r\n    onRecordEdit,\r\n    onRecordDelete,\r\n    showAddRecordAction,\r\n    showDeleteAllRecordAction,\r\n    ColumnHeaderComponent = ColumnHeader,\r\n    ColumnActionComponent = ColumnAction,\r\n    ColumnCardListComponent = ColumnCardList,\r\n    ColumnFooterComponent = ColumnFooter,\r\n    ...rest\r\n  } = props;\r\n\r\n  const {\r\n    title,\r\n    description,\r\n    caption,\r\n    color,\r\n    records = [],\r\n    wipEnabled,\r\n    wipLimit = Infinity,\r\n  } = column;\r\n\r\n  const disableAddRecordAction = wipEnabled && wipLimit <= records.length;\r\n\r\n  const disableAllRecordDeleteAction = !records.length;\r\n\r\n  const columnColor = color as keyof typeof ColumnColor;\r\n\r\n  const { darkTheme } = useTheme();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const classes = useColumnStyles({\r\n    backgroundColor: darkTheme\r\n      ? DarkColumnColor[columnColor]\r\n      : ColumnColor[columnColor],\r\n  });\r\n\r\n  const [dialog, setDialog] = React.useState({\r\n    open: false,\r\n    title: \"\",\r\n    content: null,\r\n    actions: null,\r\n  });\r\n\r\n  const handleDelete = React.useCallback(\r\n    (e) => {\r\n      onDelete && onDelete({ column, e });\r\n    },\r\n    [column, onDelete]\r\n  );\r\n\r\n  const handleEdit = React.useCallback(\r\n    (column: ColumnType) => {\r\n      onEdit && onEdit({ column });\r\n    },\r\n    [onEdit]\r\n  );\r\n\r\n  const handleAddRecord = React.useCallback(\r\n    (record: Record) => {\r\n      onAddRecord && onAddRecord({ column, record });\r\n    },\r\n    [column, onAddRecord]\r\n  );\r\n\r\n  const handleRecordEdit = React.useCallback(\r\n    (record: Record) => {\r\n      onRecordEdit({ column, record });\r\n    },\r\n    [column, onRecordEdit]\r\n  );\r\n\r\n  const handleRecordDelete = React.useCallback(\r\n    (record: Record) => {\r\n      onRecordDelete({ column, record });\r\n    },\r\n    [column, onRecordDelete]\r\n  );\r\n\r\n  const handleAllRecordDelete = React.useCallback(() => {\r\n    onAllRecordDelete({ column });\r\n  }, [column, onAllRecordDelete]);\r\n\r\n  const handleOpenDialog = React.useCallback(({ content, title, actions }) => {\r\n    setDialog({ content, title, actions, open: true });\r\n  }, []);\r\n\r\n  const handleCloseDialog = React.useCallback(() => {\r\n    setDialog(() => ({ content: null, title: \"\", actions: null, open: false }));\r\n  }, []);\r\n\r\n  const handleOpenDeleteDialog = React.useCallback(() => {\r\n    const content = <Typography>{t(\"deleteColumnConfirmation\")}</Typography>;\r\n    const actions = (\r\n      <>\r\n        <Button variant=\"outlined\" onClick={handleCloseDialog}>\r\n          {t(\"cancel\")}\r\n        </Button>\r\n        &nbsp;\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={(e) => {\r\n            handleCloseDialog();\r\n            handleDelete(e);\r\n          }}\r\n        >\r\n          {t(\"delete\")}\r\n        </Button>\r\n      </>\r\n    );\r\n\r\n    handleOpenDialog({ content, actions, title: t(\"deleteColumn\") });\r\n  }, [t, handleOpenDialog, handleDelete, handleCloseDialog]);\r\n\r\n  const handleOpenEditDialog = React.useCallback(() => {\r\n    const content = (\r\n      <ColumnForm\r\n        column={column}\r\n        formTitle={t(\"editColumn\")}\r\n        onSubmit={(column: any) => {\r\n          handleCloseDialog();\r\n          handleEdit(column);\r\n        }}\r\n        onCancel={handleCloseDialog}\r\n      ></ColumnForm>\r\n    );\r\n\r\n    handleOpenDialog({ content });\r\n  }, [column, t, handleOpenDialog, handleCloseDialog, handleEdit]);\r\n\r\n  const handleOpenAddRecordDialog = React.useCallback(() => {\r\n    const content = (\r\n      <RecordForm\r\n        onSubmit={(record: Record) => {\r\n          handleCloseDialog();\r\n          handleAddRecord(record);\r\n        }}\r\n        onCancel={handleCloseDialog}\r\n      ></RecordForm>\r\n    );\r\n\r\n    handleOpenDialog({ content });\r\n  }, [handleOpenDialog, handleCloseDialog, handleAddRecord]);\r\n\r\n  const handleOpenEditRecordDialog = React.useCallback(\r\n    (record: Record) => {\r\n      const content = (\r\n        <RecordForm\r\n          record={record}\r\n          onSubmit={(record: Record) => {\r\n            handleCloseDialog();\r\n            handleRecordEdit(record);\r\n          }}\r\n          onCancel={handleCloseDialog}\r\n        ></RecordForm>\r\n      );\r\n\r\n      handleOpenDialog({ content });\r\n    },\r\n    [handleOpenDialog, handleCloseDialog, handleRecordEdit]\r\n  );\r\n\r\n  const handleOpenDeleteRecordDialog = React.useCallback(\r\n    (record: Record) => {\r\n      const content = <Typography>{t(\"deleteRecordConfirmation\")}</Typography>;\r\n      const actions = (\r\n        <>\r\n          <Button variant=\"outlined\" onClick={handleCloseDialog}>\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          &nbsp;\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={(e) => {\r\n              handleCloseDialog();\r\n              handleRecordDelete(record);\r\n            }}\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </>\r\n      );\r\n\r\n      handleOpenDialog({ content, actions, title: t(\"deleteRecord\") });\r\n    },\r\n    [t, handleOpenDialog, handleCloseDialog, handleRecordDelete]\r\n  );\r\n\r\n  const handleOpenDeleteAllRecordDialog = React.useCallback(\r\n    (record: Record) => {\r\n      const content = (\r\n        <Typography>{t(\"deleteAllRecordConfirmation\")}</Typography>\r\n      );\r\n      const actions = (\r\n        <>\r\n          <Button variant=\"outlined\" onClick={handleCloseDialog}>\r\n            {t(\"cancel\")}\r\n          </Button>\r\n          &nbsp;\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={(e) => {\r\n              handleCloseDialog();\r\n              handleAllRecordDelete();\r\n            }}\r\n          >\r\n            {t(\"delete\")}\r\n          </Button>\r\n        </>\r\n      );\r\n\r\n      handleOpenDialog({ content, actions, title: t(\"deleteAllRecord\") });\r\n    },\r\n    [t, handleOpenDialog, handleCloseDialog, handleAllRecordDelete]\r\n  );\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      className={clsx(className, classes.paper)}\r\n      ref={innerRef}\r\n      {...rest}\r\n    >\r\n      <ColumnHeaderComponent\r\n        title={title}\r\n        description={description}\r\n        showEditAction={showEditAction}\r\n        showDeleteAction={showDeleteAction}\r\n        onEdit={handleOpenEditDialog}\r\n        onDelete={handleOpenDeleteDialog}\r\n      />\r\n      <ColumnActionComponent\r\n        showAddRecordAction={showAddRecordAction}\r\n        showDeleteAllRecordAction={showDeleteAllRecordAction}\r\n        disableAddRecordAction={disableAddRecordAction}\r\n        disableAllRecordDeleteAction={disableAllRecordDeleteAction}\r\n        onAddRecord={handleOpenAddRecordDialog}\r\n        onDeleteAllRecord={handleOpenDeleteAllRecordDialog}\r\n      />\r\n      <ColumnCardListComponent\r\n        column={column}\r\n        onRecordEdit={handleOpenEditRecordDialog}\r\n        onRecordDelete={handleOpenDeleteRecordDialog}\r\n      />\r\n      <ColumnFooterComponent content={caption} />\r\n      <Dialog open={dialog.open} onClose={handleCloseDialog}>\r\n        <DialogTitle>{dialog.title}</DialogTitle>\r\n        <DialogContent>{dialog.content}</DialogContent>\r\n        <DialogActions>{dialog.actions}</DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import Column from \"./Column\";\r\nexport { ColumnCardList, ColumnFooter, ColumnHeader } from \"./Column\";\r\n\r\nexport default Column;\r\n","import React from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Column from \"PersonalKanban/components/Column\";\r\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\r\nimport { Column as ColumnType } from \"PersonalKanban/types\";\r\nimport { COLUMN_WIDTH } from \"PersonalKanban/constants\";\r\n\r\nconst useBoardStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    display: \"inline-flex\",\r\n    width: \"fit-content\",\r\n  },\r\n  column: {\r\n    width: COLUMN_WIDTH,\r\n    margin: theme.spacing(),\r\n    height: \"fit-content\",\r\n  },\r\n}));\r\n\r\ntype BoardProps = {\r\n  columns: ColumnType[];\r\n  innerRef: any;\r\n  ColumnComponent: any;\r\n  placeholder?: any;\r\n  onColumnEdit?: any;\r\n  onColumnDelete?: any;\r\n  onAddRecord?: any;\r\n  onRecordEdit?: any;\r\n  onRecordDelete?: any;\r\n  onAllRecordDelete?: any;\r\n};\r\n\r\nconst Board: React.FC<BoardProps> = (props) => {\r\n  const {\r\n    columns,\r\n    innerRef,\r\n    ColumnComponent = Column,\r\n    placeholder,\r\n    onColumnEdit,\r\n    onColumnDelete,\r\n    onAddRecord,\r\n    onRecordEdit,\r\n    onRecordDelete,\r\n    onAllRecordDelete,\r\n    ...rest\r\n  } = props;\r\n\r\n  const classes = useBoardStyles();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className={classes.root} ref={innerRef} {...rest}>\r\n      {columns && columns.length ? (\r\n        columns.map((column, index) => (\r\n          <ColumnComponent\r\n            index={index}\r\n            key={column.id}\r\n            column={column}\r\n            className={classes.column}\r\n            onEdit={onColumnEdit}\r\n            onDelete={onColumnDelete}\r\n            onAddRecord={onAddRecord}\r\n            onRecordEdit={onRecordEdit}\r\n            onRecordDelete={onRecordDelete}\r\n            onAllRecordDelete={onAllRecordDelete}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <Typography>{t(\"noColumn\")}</Typography>\r\n        </Box>\r\n      )}\r\n      {placeholder}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","export const COLUMN_WIDTH = 250;\r\n","import Board from \"./Board\";\r\n\r\nexport default Board;\r\n","import KanbanCard from \"./KanbanCard\";\r\n\r\nexport default KanbanCard;\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport Card from \"PersonalKanban/components/Card\";\r\nimport { Record } from \"PersonalKanban/types\";\r\nimport { RecordColor, DarkRecordColor } from \"PersonalKanban/enums\";\r\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\r\n\r\ntype KanbanCardProps = {\r\n  record: Record;\r\n  index: number;\r\n  className?: string;\r\n  onEdit?: any;\r\n  onDelete?: any;\r\n};\r\n\r\nconst KanbanCard: React.FC<KanbanCardProps> = (props) => {\r\n  const { record, index, className, onEdit, onDelete } = props;\r\n\r\n  const recordColor = record.color as keyof typeof RecordColor;\r\n\r\n  const { darkTheme } = useTheme();\r\n\r\n  return (\r\n    <Draggable draggableId={record.id} index={index}>\r\n      {(provided) => (\r\n        <Card\r\n          key={record.id}\r\n          innerRef={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={{\r\n            ...provided.draggableProps.style,\r\n            backgroundColor: darkTheme\r\n              ? DarkRecordColor[recordColor]\r\n              : RecordColor[recordColor],\r\n          }}\r\n          record={record}\r\n          className={className}\r\n          onEdit={onEdit}\r\n          onDelete={onDelete}\r\n        />\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default KanbanCard;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport KanbanCard from \"PersonalKanban/components/KanbanCard\";\r\nimport Column, { ColumnCardList } from \"PersonalKanban/components/Column\";\r\nimport { Column as ColumnType } from \"PersonalKanban/types\";\r\n\r\ntype KanbanInnerColumnCardListProps = {\r\n  column: ColumnType;\r\n  onRecordEdit?: any;\r\n  onRecordDelete?: any;\r\n};\r\n\r\nconst KanbanInnerColumnCardList: React.FC<KanbanInnerColumnCardListProps> = React.memo(\r\n  (props) => {\r\n    const { column, onRecordEdit, onRecordDelete } = props;\r\n    return (\r\n      <ColumnCardList\r\n        column={column}\r\n        CardComponent={KanbanCard}\r\n        onRecordEdit={onRecordEdit}\r\n        onRecordDelete={onRecordDelete}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\ntype KanbanColumnCardListProps = {\r\n  column: ColumnType;\r\n  onRecordEdit?: any;\r\n  onRecordDelete?: any;\r\n};\r\n\r\nconst KanbanColumnCardList: React.FC<KanbanColumnCardListProps> = (props) => {\r\n  const { column, onRecordEdit, onRecordDelete } = props;\r\n  const { id: columnId, records = [], wipEnabled, wipLimit = false } = column;\r\n  const isDropDisabled = wipEnabled && wipLimit <= records?.length;\r\n  return (\r\n    <Droppable droppableId={columnId} isDropDisabled={isDropDisabled}>\r\n      {(provided) => (\r\n        <div ref={provided.innerRef} {...provided.droppableProps}>\r\n          <KanbanInnerColumnCardList\r\n            column={column}\r\n            onRecordEdit={onRecordEdit}\r\n            onRecordDelete={onRecordDelete}\r\n          />\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\ntype KanbanColumnProps = {\r\n  column: ColumnType;\r\n  index: number;\r\n  className?: string;\r\n  onEdit?: any;\r\n  onDelete?: any;\r\n  onAddRecord?: any;\r\n  onRecordEdit?: any;\r\n  onRecordDelete?: any;\r\n  onAllRecordDelete?: any;\r\n};\r\n\r\nconst KanbanColumn: React.FC<KanbanColumnProps> = (props) => {\r\n  const {\r\n    column,\r\n    index,\r\n    className,\r\n    onEdit,\r\n    onDelete,\r\n    onAddRecord,\r\n    onRecordEdit,\r\n    onRecordDelete,\r\n    onAllRecordDelete,\r\n  } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const _column = Object.assign({}, column, {\r\n    caption: column.wipEnabled\r\n      ? `${t(\"wipLimit\")} :${column.wipLimit}`\r\n      : column.createdAt,\r\n  });\r\n\r\n  return (\r\n    <Draggable draggableId={column.id} index={index}>\r\n      {(provided) => (\r\n        <Column\r\n          innerRef={provided.innerRef}\r\n          column={_column}\r\n          className={className}\r\n          ColumnCardListComponent={KanbanColumnCardList}\r\n          onEdit={onEdit}\r\n          onDelete={onDelete}\r\n          onAddRecord={onAddRecord}\r\n          onRecordEdit={onRecordEdit}\r\n          onRecordDelete={onRecordDelete}\r\n          onAllRecordDelete={onAllRecordDelete}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        />\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default KanbanColumn;\r\n","import KanbanColumn from \"./KanbanColumn\";\r\n\r\nexport default KanbanColumn;\r\n","import KanbanBoard from \"./KanbanBoard\";\r\n\r\nexport default KanbanBoard;\r\n","import React from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport Board from \"PersonalKanban/components/Board\";\r\nimport KanbanColumn from \"PersonalKanban/components/KanbanColumn\";\r\nimport { Column } from \"PersonalKanban/types\";\r\n\r\ntype KanbanBoardProps = {\r\n  columns: Column[];\r\n  onCardMove?: any;\r\n  onColumnMove?: any;\r\n  onColumnEdit?: any;\r\n  onColumnDelete?: any;\r\n  onAddRecord?: any;\r\n  onRecordEdit?: any;\r\n  onRecordDelete?: any;\r\n  onAllRecordDelete?: any;\r\n  ColumnComponent?: any;\r\n};\r\n\r\nconst KanbanBoard: React.FC<KanbanBoardProps> = (props) => {\r\n  const {\r\n    columns,\r\n    onCardMove,\r\n    onColumnMove,\r\n    onColumnEdit,\r\n    onColumnDelete,\r\n    onAddRecord,\r\n    onRecordEdit,\r\n    onRecordDelete,\r\n    onAllRecordDelete,\r\n    ColumnComponent = KanbanColumn,\r\n  } = props;\r\n\r\n  const getColumnById = React.useCallback(\r\n    (columnId) => columns.find((column) => column.id === columnId),\r\n    [columns]\r\n  );\r\n\r\n  const getColumnByIndex = React.useCallback((index) => columns[index], [\r\n    columns,\r\n  ]);\r\n\r\n  const handleDragEnd = React.useCallback(\r\n    (result) => {\r\n      const { source, destination, type } = result;\r\n\r\n      if (!destination) {\r\n        // Invalid Destination\r\n        return;\r\n      }\r\n\r\n      if (\r\n        source.droppableId === destination.droppableId &&\r\n        source.index === destination.index\r\n      ) {\r\n        // Drop position is same as original\r\n        return;\r\n      }\r\n\r\n      if (type === \"COLUMN\") {\r\n        onColumnMove({\r\n          column: getColumnByIndex(source.index),\r\n          index: destination.index,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const record = getColumnById(source.droppableId)?.records?.[source.index];\r\n\r\n      onCardMove({\r\n        source: getColumnById(source.droppableId),\r\n        column: getColumnById(destination.droppableId),\r\n        record,\r\n        index: destination.index,\r\n      });\r\n    },\r\n    [onColumnMove, onCardMove, getColumnByIndex, getColumnById]\r\n  );\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleDragEnd}>\r\n      <Droppable droppableId=\"BOARD\" type=\"COLUMN\" direction=\"horizontal\">\r\n        {(provided) => (\r\n          <>\r\n            <Board\r\n              innerRef={provided.innerRef}\r\n              ColumnComponent={ColumnComponent}\r\n              {...provided.droppableProps}\r\n              columns={columns}\r\n              placeholder={provided.placeholder}\r\n              onColumnEdit={onColumnEdit}\r\n              onColumnDelete={onColumnDelete}\r\n              onAddRecord={onAddRecord}\r\n              onRecordEdit={onRecordEdit}\r\n              onRecordDelete={onRecordDelete}\r\n              onAllRecordDelete={onAllRecordDelete}\r\n            />\r\n          </>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\n\r\nimport { Column } from \"PersonalKanban/types\";\r\n\r\nexport const getId = (): string => {\r\n  return uuidv4();\r\n};\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\nexport const getCreatedAt = () => {\r\n  return `${moment().format(\"YYYY-MM-DD\")} ${moment().format(\"h:mm:ss a\")}`;\r\n};\r\n\r\nexport const reorderCards = ({\r\n  columns,\r\n  sourceColumn,\r\n  destinationColumn,\r\n  sourceIndex,\r\n  destinationIndex,\r\n}: {\r\n  columns: Column[];\r\n  sourceColumn: Column;\r\n  destinationColumn: Column;\r\n  sourceIndex: number;\r\n  destinationIndex: number;\r\n}) => {\r\n  const getColumnIndex = (columnId: string) =>\r\n    columns.findIndex((c) => c.id === columnId);\r\n\r\n  const getRecords = (columnId: string) => [\r\n    ...columns.find((c) => c.id === columnId)?.records!,\r\n  ];\r\n\r\n  const current = getRecords(sourceColumn.id);\r\n  const next = getRecords(destinationColumn.id);\r\n  const target = current[sourceIndex];\r\n\r\n  // moving to same list\r\n  if (sourceColumn.id === destinationColumn.id) {\r\n    const reordered = reorder(current, sourceIndex, destinationIndex);\r\n    const newColumns = columns.map((c) => ({ ...c }));\r\n    newColumns[getColumnIndex(sourceColumn.id)].records = reordered;\r\n    return newColumns;\r\n  }\r\n\r\n  // moving to different list\r\n  current.splice(sourceIndex, 1);\r\n  next.splice(destinationIndex, 0, target);\r\n  const newColumns = columns.map((c) => ({ ...c }));\r\n  newColumns[getColumnIndex(sourceColumn.id)].records = current;\r\n  newColumns[getColumnIndex(destinationColumn.id)].records = next;\r\n  return newColumns;\r\n};\r\n\r\nexport const getInitialState = () => {\r\n  return [\r\n    {\r\n      id: getId(),\r\n      title: \"准备\",\r\n      color: \"Orange\",\r\n      records: [\r\n        {\r\n          id: getId(),\r\n          color: \"Yellow\",\r\n          title: \"初始化\",\r\n          description:\r\n            \"可以删除这块板子。如果要重新开始，单击主工具栏上的删除按钮。\",\r\n          createdAt: getCreatedAt(),\r\n        },\r\n      ],\r\n      createdAt: getCreatedAt(),\r\n    },\r\n    {\r\n      id: getId(),\r\n      title: \"进行中\",\r\n      color: \"Red\",\r\n      records: [\r\n        {\r\n          id: getId(),\r\n          color: \"Purple\",\r\n          title: \"进行中的模块\",\r\n          description: \"此处是进行中的模块\",\r\n          createdAt: getCreatedAt(),\r\n        },\r\n      ],\r\n      createdAt: getCreatedAt(),\r\n    },\r\n    {\r\n      id: getId(),\r\n      title: \"结束\",\r\n      color: \"Green\",\r\n      records: [\r\n        {\r\n          id: getId(),\r\n          color: \"Indigo\",\r\n          title: \"已结束\",\r\n          description: \"已结束的模块\",\r\n          createdAt: getCreatedAt(),\r\n        },\r\n      ],\r\n      createdAt: getCreatedAt(),\r\n    },\r\n  ];\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n//import useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\r\nimport ColumnForm from \"PersonalKanban/components/ColumnForm\";\r\nimport IconButton from \"PersonalKanban/components/IconButton\";\r\nimport { Column } from \"PersonalKanban/types\";\r\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\r\nimport StorageService from \"PersonalKanban/services/StorageService\";\r\nimport { TitleContext } from \"../KanbanBoard/title\";\r\n\r\ntype AddColumnButtonProps = {\r\n  onSubmit: any;\r\n};\r\n\r\nconst AddColumnButton: React.FC<AddColumnButtonProps> = (props) => {\r\n  const { onSubmit } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpenDialog = React.useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleCloseDialog = React.useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const handleSubmit = React.useCallback(\r\n    (column: Column) => {\r\n      onSubmit({ column });\r\n      handleCloseDialog();\r\n    },\r\n    [onSubmit, handleCloseDialog]\r\n  );\r\n\r\n  return (\r\n    <Box display=\"block\">\r\n      <IconButton icon=\"add\" color=\"primary\" onClick={handleOpenDialog}>\r\n        {t(\"addColumn\")}\r\n      </IconButton>\r\n      <Dialog onClose={handleCloseDialog} open={open}>\r\n        <DialogContent>\r\n          <ColumnForm onSubmit={handleSubmit} onCancel={handleCloseDialog} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\ntype ClearBoardButtonProps = {\r\n  onClear: any;\r\n  disabled?: boolean;\r\n};\r\n\r\nconst ClearBoardButton: React.FC<ClearBoardButtonProps> = (props) => {\r\n  const { disabled, onClear } = props;\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpenDialog = React.useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleCloseDialog = React.useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const handleClear = React.useCallback(\r\n    (e) => {\r\n      onClear({ e });\r\n      handleCloseDialog();\r\n    },\r\n    [onClear, handleCloseDialog]\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <IconButton\r\n        icon=\"delete\"\r\n        color=\"primary\"\r\n        disabled={disabled}\r\n        onClick={handleOpenDialog}\r\n      ></IconButton>\r\n      <Dialog onClose={handleCloseDialog} open={open}>\r\n        <DialogContent>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography gutterBottom variant=\"h6\">\r\n                {t(\"clearBoard\")}\r\n              </Typography>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography gutterBottom>\r\n                {t(\"clearBoardConfirmation\")}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" onClick={handleCloseDialog}>\r\n                {t(\"cancel\")}\r\n              </Button>\r\n              &nbsp;\r\n              <Button color=\"primary\" variant=\"contained\" onClick={handleClear}>\r\n                {t(\"clear\")}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\ntype LanguageButtonProps = {};\r\n\r\nconst LanguageButton: React.FC<LanguageButtonProps> = (props) => {\r\n  const { i18n } = useTranslation();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangeLanguage = (lng: string) => () => {\r\n    i18n.changeLanguage(lng);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Box display=\"block\">\r\n      <IconButton\r\n        icon={\"language\"}\r\n        aria-controls=\"language-menu\"\r\n        aria-haspopup=\"true\"\r\n        color=\"inherit\"\r\n        onClick={handleClick}\r\n      />\r\n      <Menu\r\n        id=\"language-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleChangeLanguage(\"cn\")}>中文</MenuItem>\r\n        <MenuItem onClick={handleChangeLanguage(\"en\")}>English</MenuItem>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DarkThemeButton: React.FC<{}> = () => {\r\n  const { darkTheme, handleToggleDarkTheme } = useTheme();\r\n\r\n  return (\r\n    <IconButton\r\n      color=\"inherit\"\r\n      icon={darkTheme ? \"invertColors\" : \"invertColorsOff\"}\r\n      onClick={handleToggleDarkTheme}\r\n    />\r\n  );\r\n};\r\n\r\nconst SaveButton: React.FC<{}> = () => {\r\n  //const { title } = useContext(TitleContext);\r\n  const SaveAction = () => {   \r\n    StorageService.saveData();\r\n  }\r\n  //const { t } = useTranslation();\r\n  return (\r\n    <IconButton\r\n      color=\"inherit\"\r\n      icon=\"save\"\r\n      onClick={SaveAction}\r\n    />\r\n  );\r\n};\r\nconst TitleInput: React.FC<{}> = () => {\r\n  const { t } = useTranslation();\r\n  //const [dataTitle, setDataTitle] = useState('未命名看板');\r\n  // let dataTitle = localStorage.getItem(\"__kanbantitle\")\r\n  // dataTitle = dataTitle ? dataTitle : t(\"undefineTitle\")\r\n  // const [daTitle, setDaTitle] = useState(dataTitle);\r\n  //const { title, setTitle } = useContext(TitleContext); // 从上下文中获取title和setTitle\r\n  // React.useEffect(() => {\r\n  //   console.log(\"标题已更新为:\", title); // 用于调试，确认title是否更新\r\n  //   // 在这里可以执行标题更新后的其他逻辑，如DOM操作或API调用\r\n  // }, [title]); // 监听title变化\r\n  const title = StorageService.getTitle();\r\n  return (\r\n    <Box \r\n    display=\"block\" \r\n    component=\"form\"\r\n    >\r\n        <TextField\r\n        name=\"title\"\r\n        label={t(\"personalKanban\")}\r\n        id=\"dataTitle\"\r\n        variant=\"standard\"\r\n        value={title}\r\n        onChange={(e:any) => {\r\n          //localStorage.setItem(\"__kanbantitle\", e.target.value)\r\n          StorageService.setTitle(e.target.value);\r\n          //dataTitle = e.target.value;\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nconst useToolbarStyles = makeStyles(() => ({\r\n  paper: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\ntype ToolbarProps = {\r\n  clearButtonDisabled?: boolean;\r\n  onNewColumn: any;\r\n  onClearBoard: any;\r\n  //dataTitle?:any;\r\n};\r\n\r\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\r\n  const { clearButtonDisabled, onNewColumn, onClearBoard } = props;\r\n\r\n  //const { t } = useTranslation();\r\n\r\n  const classes = useToolbarStyles();\r\n\r\n  //const muiTheme = useMuiTheme();\r\n  //const [dataTitle, setDataTitle] = useState('')\r\n\r\n\r\n  //const isMobile = useMediaQuery(muiTheme.breakpoints.down(\"sm\"));\r\n  //dataTitle = dataTitle ? dataTitle : t(\"undefineTitle\")\r\n  return (\r\n    <AppBar color=\"default\" elevation={6} className={classes.paper}>\r\n      <MuiToolbar>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconButton\r\n            icon=\"personalKanban\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            iconProps={{ fontSize: \"large\" }}\r\n            disableRipple\r\n            disableTouchRipple\r\n            disableFocusRipple\r\n          />\r\n          &nbsp;\r\n          <TitleInput />\r\n        </Box>\r\n        <Box display=\"flex\" flexGrow={1} />\r\n        <Box display=\"flex\">\r\n          <AddColumnButton onSubmit={onNewColumn} />\r\n          &nbsp;\r\n          <ClearBoardButton\r\n            disabled={clearButtonDisabled}\r\n            onClear={onClearBoard}\r\n          />\r\n          &nbsp;\r\n          <LanguageButton /> &nbsp;\r\n          <DarkThemeButton /> &nbsp;\r\n          <SaveButton />\r\n        </Box>\r\n      </MuiToolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","// 导入必要的React库和类型\r\nimport React, { createContext, useState } from \"react\";\r\n\r\n// 定义上下文的类型别名，清晰指定上下文中包含的数据结构\r\ninterface TitleContextType {\r\n    title: string; // 当前的标题\r\n    setTitle: (newTitle: string) => void; // 设置新标题的函数\r\n}\r\n\r\n// 创建一个上下文实例，初始化默认值\r\nexport const TitleContext = createContext<TitleContextType>({\r\n    title: \"未命名看板\", // 默认标题\r\n    setTitle: () => {}, // 默认的空函数，用于设置标题\r\n});\r\n\r\n// 定义一个组件，它作为上下文的提供者\r\nexport const TitleContextProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    // 使用useState Hook来管理标题状态\r\n    // 使用useState Hook来管理标题状态\r\n    const [title, setTitle] = useState<string>(\"未命名看板\"); // 注意这里改名为setTitleRaw\r\n\r\n    // 添加日志记录的setTitle函数\r\n    // const setTitle = (newTitle: string) => {\r\n    //     console.log(\"setTitle function executed with:\", newTitle);\r\n    //     setTitleRaw(newTitle);\r\n    // };\r\n    // 准备提供给上下文的值对象\r\n    const contextValue = {\r\n        title, // 当前的标题状态\r\n        setTitle, // 设置标题的函数\r\n    };\r\n\r\n    // 使用TitleContext.Provider包裹子组件，使得其后代组件可以访问到title和setTitle\r\n    return (\r\n        <TitleContext.Provider value={contextValue}>\r\n            {children} {/* 渲染传递进来的子组件 */}\r\n        </TitleContext.Provider>\r\n    );\r\n};","import React, { useContext } from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport KanbanBoard from \"PersonalKanban/components/KanbanBoard\";\r\nimport { Column, Record } from \"PersonalKanban/types\";\r\nimport {\r\n  getId,\r\n  getCreatedAt,\r\n  getInitialState,\r\n  reorder,\r\n  reorderCards,\r\n} from \"PersonalKanban/services/Utils\";\r\nimport StorageService from \"PersonalKanban/services/StorageService\";\r\nimport Toolbar from \"PersonalKanban/containers/Toolbar\";\r\nimport { TitleContext } from \"./title\";\r\n\r\nconst useKanbanBoardStyles = makeStyles((theme) => ({\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\ntype KanbanBoardContainerProps = {};\r\n\r\n//let initialState = StorageService.getColumns();\r\n\r\n//if (!initialState) {\r\nlet initialState = getInitialState();\r\n// localStorage.setItem(\"__kanbantitle\", \"\");\r\n//}\r\nfunction isBase64(str : string) {\r\n  if (str === '' || str.trim() === '') {\r\n    return false\r\n  }\r\n  try {\r\n    return btoa(atob(str)) === str\r\n  } catch (err) {\r\n    return false\r\n  }\r\n}\r\nfunction decodeBase64(base64String : string) {\r\n  // 将Base64字符串分成每64个字符一组\r\n  const padding =\r\n    base64String.length % 4 === 0 ? 0 : 4 - (base64String.length % 4)\r\n  base64String += '='.repeat(padding)\r\n\r\n  // 使用atob()函数解码Base64字符串\r\n  const binaryString = atob(base64String)\r\n\r\n  // 将二进制字符串转换为TypedArray\r\n  const bytes = new Uint8Array(binaryString.length)\r\n  for (let i = 0; i < binaryString.length; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i)\r\n  }\r\n\r\n  // 将TypedArray转换为字符串\r\n  return new TextDecoder('utf-8').decode(bytes)\r\n}\r\nconst KanbanBoardContainer: React.FC<KanbanBoardContainerProps> = (props) => {\r\n  const [columns, setColumns] = React.useState<Column[]>(initialState);\r\n  const { setTitle } = useContext(TitleContext); // 从上下文中获取setTitle函数\r\n  const EventHandler = (e: any) => {\r\n    const eventData = e.data\r\n    //const titleInput = document.querySelector<HTMLInputElement>(\"#dataTitle\");\r\n    console.log(eventData)\r\n    if (eventData.type === 'start') {\r\n      if (eventData.title) {\r\n        const baseTitle = eventData.title.substring(0, eventData.title.lastIndexOf('.'))\r\n        StorageService.setTitle(baseTitle)\r\n      }\r\n    }\r\n    if (eventData.type === 'init') {\r\n      const data = eventData.data\r\n      if (data) {\r\n        StorageService.setShare(data)\r\n        StorageService.setRefresh(data)\r\n        if (data.title) {\r\n          //const baseTitle = data.title.substring(0, data.title.lastIndexOf('.'))\r\n          StorageService.setTitle(data.title);\r\n        }\r\n        if(data.content) {\r\n          if (typeof data.content === 'string' && isBase64(data.content)) {\r\n            data.content = decodeBase64(data.content)\r\n            data.content = JSON.parse(data.content)\r\n          }\r\n          initialState = data.content;\r\n          setColumns(data.content);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  window.addEventListener('load', () => {\r\n    window.parent.postMessage({ type: 'initSuccess' }, '*')\r\n    window.addEventListener('message', EventHandler)\r\n    window.addEventListener('input',StorageService.saveShare)\r\n  })\r\n  window.addEventListener('unload', () => {\r\n    window.removeEventListener('message', EventHandler)\r\n    window.removeEventListener('input',StorageService.saveShare)\r\n  })\r\n  const classes = useKanbanBoardStyles();\r\n\r\n  const cloneColumns = React.useCallback((columns: Column[]) => {\r\n    return columns.map((column: Column) => ({\r\n      ...column,\r\n      records: [...column.records!],\r\n    }));\r\n  }, []);\r\n\r\n  const getColumnIndex = React.useCallback(\r\n    (id: string) => {\r\n      return columns.findIndex((c: Column) => c.id === id);\r\n    },\r\n    [columns]\r\n  );\r\n\r\n  const getRecordIndex = React.useCallback(\r\n    (recordId: string, columnId: string) => {\r\n      return columns[getColumnIndex(columnId)]?.records?.findIndex(\r\n        (r: Record) => r.id === recordId\r\n      );\r\n    },\r\n    [columns, getColumnIndex]\r\n  );\r\n\r\n  const handleClearBoard = React.useCallback(() => {\r\n    setColumns([]);\r\n  }, []);\r\n\r\n  const handleAddColumn = React.useCallback(\r\n    ({ column }: { column: Column }) => {\r\n      setColumns((columns: Column[]) => [\r\n        ...columns,\r\n        Object.assign(\r\n          { id: getId(), records: [], createdAt: getCreatedAt() },\r\n          column\r\n        ),\r\n      ]);\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleColumnMove = React.useCallback(\r\n    ({ column, index }: { column: Column; index: number }) => {\r\n      const updatedColumns = reorder(columns, getColumnIndex(column.id), index);\r\n      setColumns(updatedColumns);\r\n    },\r\n    [columns, getColumnIndex]\r\n  );\r\n\r\n  const handleColumnEdit = React.useCallback(\r\n    ({ column }: { column: Column }) => {\r\n      setColumns((_columns: Column[]) => {\r\n        const columnIndex = getColumnIndex(column.id);\r\n        const columns = cloneColumns(_columns);\r\n        columns[columnIndex].title = column.title;\r\n        columns[columnIndex].description = column.description;\r\n        columns[columnIndex].color = column.color;\r\n        columns[columnIndex].wipEnabled = column.wipEnabled;\r\n        columns[columnIndex].wipLimit = column.wipLimit;\r\n        return columns;\r\n      });\r\n    },\r\n    [getColumnIndex, cloneColumns]\r\n  );\r\n\r\n  const handleColumnDelete = React.useCallback(\r\n    ({ column }: { column: Column }) => {\r\n      setColumns((_columns: Column[]) => {\r\n        const columns = cloneColumns(_columns);\r\n        columns.splice(getColumnIndex(column.id), 1);\r\n        return columns;\r\n      });\r\n    },\r\n    [cloneColumns, getColumnIndex]\r\n  );\r\n\r\n  const handleCardMove = React.useCallback(\r\n    ({\r\n      column,\r\n      index,\r\n      source,\r\n      record,\r\n    }: {\r\n      column: Column;\r\n      index: number;\r\n      source: Column;\r\n      record: Record;\r\n    }) => {\r\n      const updatedColumns = reorderCards({\r\n        columns,\r\n        destinationColumn: column,\r\n        destinationIndex: index,\r\n        sourceColumn: source,\r\n        sourceIndex: getRecordIndex(record.id, source.id)!,\r\n      });\r\n\r\n      setColumns(updatedColumns);\r\n    },\r\n    [columns, getRecordIndex]\r\n  );\r\n\r\n  const handleAddRecord = React.useCallback(\r\n    ({ column, record }: { column: Column; record: Record }) => {\r\n      const columnIndex = getColumnIndex(column.id);\r\n      setColumns((_columns: Column[]) => {\r\n        const columns = cloneColumns(_columns);\r\n\r\n        columns[columnIndex].records = [\r\n          {\r\n            id: getId(),\r\n            title: record.title,\r\n            description: record.description,\r\n            color: record.color,\r\n            createdAt: getCreatedAt(),\r\n          },\r\n          ...columns[columnIndex].records,\r\n        ];\r\n        return columns;\r\n      });\r\n    },\r\n    [cloneColumns, getColumnIndex]\r\n  );\r\n\r\n  const handleRecordEdit = React.useCallback(\r\n    ({ column, record }: { column: Column; record: Record }) => {\r\n      const columnIndex = getColumnIndex(column.id);\r\n      const recordIndex = getRecordIndex(record.id, column.id);\r\n      setColumns((_columns) => {\r\n        const columns = cloneColumns(_columns);\r\n        const _record = columns[columnIndex].records[recordIndex!];\r\n        _record.title = record.title;\r\n        _record.description = record.description;\r\n        _record.color = record.color;\r\n        return columns;\r\n      });\r\n    },\r\n    [getColumnIndex, getRecordIndex, cloneColumns]\r\n  );\r\n\r\n  const handleRecordDelete = React.useCallback(\r\n    ({ column, record }: { column: Column; record: Record }) => {\r\n      const columnIndex = getColumnIndex(column.id);\r\n      const recordIndex = getRecordIndex(record.id, column.id);\r\n      setColumns((_columns) => {\r\n        const columns = cloneColumns(_columns);\r\n        columns[columnIndex].records.splice(recordIndex!, 1);\r\n        return columns;\r\n      });\r\n    },\r\n    [cloneColumns, getColumnIndex, getRecordIndex]\r\n  );\r\n\r\n  const handleAllRecordDelete = React.useCallback(\r\n    ({ column }: { column: Column }) => {\r\n      const columnIndex = getColumnIndex(column.id);\r\n      setColumns((_columns) => {\r\n        const columns = cloneColumns(_columns);\r\n        columns[columnIndex].records = [];\r\n        return columns;\r\n      });\r\n    },\r\n    [cloneColumns, getColumnIndex]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    StorageService.setColumns(columns);\r\n  }, [columns]);\r\n\r\n  return (\r\n    <>  \r\n      <Toolbar\r\n        clearButtonDisabled={!columns.length}\r\n        onNewColumn={handleAddColumn}\r\n        onClearBoard={handleClearBoard}\r\n      />\r\n      <div className={classes.toolbar} />\r\n      <Box padding={1}>\r\n        <KanbanBoard\r\n          columns={columns}\r\n          onColumnMove={handleColumnMove}\r\n          onColumnEdit={handleColumnEdit}\r\n          onColumnDelete={handleColumnDelete}\r\n          onCardMove={handleCardMove}\r\n          onAddRecord={handleAddRecord}\r\n          onRecordEdit={handleRecordEdit}\r\n          onRecordDelete={handleRecordDelete}\r\n          onAllRecordDelete={handleAllRecordDelete}\r\n        />\r\n      </Box> \r\n    </>\r\n  );\r\n};\r\n\r\nexport default KanbanBoardContainer;\r\n","import React from \"react\";\r\n\r\nimport ThemeProvider from \"PersonalKanban/providers/ThemeProvider\";\r\nimport KanbanBoardContainer from \"PersonalKanban/containers/KanbanBoard\";\r\nimport TranslationProvider from \"./providers/TranslationProvider\";\r\nimport { TitleContextProvider } from \"PersonalKanban/containers/KanbanBoard/title\";\r\n\r\ninterface PersonalKanbanProps {}\r\n\r\nconst PersonalKanban: React.FC<PersonalKanbanProps> = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <TranslationProvider>\r\n        <TitleContextProvider>\r\n          <KanbanBoardContainer />\r\n        </TitleContextProvider>\r\n      </TranslationProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default PersonalKanban;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport PersonalKanban from \"./PersonalKanban\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <PersonalKanban />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// serviceWorkerRegistration.register();\r\n// reportWebVitals();\r\n"],"sourceRoot":""}