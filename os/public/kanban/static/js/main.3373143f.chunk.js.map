{"version":3,"sources":["PersonalKanban/services/StorageService.ts","PersonalKanban/providers/ThemeProvider.tsx","PersonalKanban/components/IconButton/IconButton.tsx","PersonalKanban/components/IconButton/index.tsx","PersonalKanban/components/Card/Card.tsx","PersonalKanban/components/Card/index.ts","PersonalKanban/enums/index.tsx","PersonalKanban/components/Radio/Radio.tsx","PersonalKanban/components/Radio/index.tsx","PersonalKanban/providers/TranslationProvider.tsx","PersonalKanban/components/ColumnForm/index.tsx","PersonalKanban/components/ColumnForm/ColumnForm.tsx","PersonalKanban/components/RecordForm/index.tsx","PersonalKanban/components/RecordForm/RecordForm.tsx","PersonalKanban/components/Column/Column.tsx","PersonalKanban/components/Column/index.tsx","PersonalKanban/components/Board/Board.tsx","PersonalKanban/constants/index.tsx","PersonalKanban/components/Board/index.ts","PersonalKanban/components/KanbanCard/index.tsx","PersonalKanban/components/KanbanCard/KanbanCard.tsx","PersonalKanban/components/KanbanColumn/KanbanColumn.tsx","PersonalKanban/components/KanbanColumn/index.tsx","PersonalKanban/components/KanbanBoard/index.tsx","PersonalKanban/components/KanbanBoard/KanbanBoard.tsx","PersonalKanban/services/Utils.ts","PersonalKanban/containers/KanbanBoard/title.tsx","PersonalKanban/containers/Toolbar/index.tsx","PersonalKanban/containers/KanbanBoard/index.tsx","PersonalKanban/index.tsx","index.tsx"],"names":["DARK_MODE","COLUMNS","getItem","key","JSON","parse","localStorage","setItem","value","stringify","StorageService","getDarkMode","setDarkMode","getColumns","setColumns","ThemeContext","React","createContext","useTheme","useContext","ThemeProvider","props","children","useState","darkTheme","setDarkTheme","handleToggleDarkTheme","useCallback","theme","createMuiTheme","palette","primary","lightGreen","brown","secondary","blueGrey","type","overrides","MuiPaper","root","cursor","padding","MuiDivider","backgroundColor","typography","fontFamily","fontWeightLight","fontWeightMedium","fontWeightRegular","fontWeightBold","light","MuiTextField","variant","margin","fullWidth","MuiButton","size","MuiRadio","custom","colors","pastel","violet","purple","pastelCode","indigo","blue","green","yellow","orange","red","useMemo","Provider","CssBaseline","icons","edit","EditIcon","delete","DeleteIcon","add","AddIcon","deleteSweep","DeleteSweepIcon","deleteForever","DeleteForeverIcon","invertColors","InvertColorsIcon","invertColorsOff","InvertColorsOffIcon","gitHub","GitHubIcon","language","LanguageIcon","personalKanban","DeveloperBoardIcon","info","InfoIcon","list","ListIcon","save","SaveIcon","IconButton","icon","iconProps","rest","Icon","fontSize","useStyles","makeStyles","paper","height","description","maxHeight","minHeight","display","overflow","whiteSpace","Card","record","className","innerRef","style","showEditAction","showDeleteAction","onDelete","onEdit","title","createdAt","classes","handleEdit","handleDelete","Paper","clsx","ref","Box","alignItems","justifyContent","Typography","gutterBottom","noWrap","onClick","component","defaultProps","RecordColor","Purple","RECORD_SHADE","Indigo","Blue","Green","Yellow","Orange","Red","Default","DarkRecordColor","DARK_RECORD_SHADE","ColumnColor","COLUMN_SHADE","DarkColumnColor","DARK_COLUMN_SHADE","color","checked","Radio","forwardRef","i18n","i18next","createInstance","use","initReactI18next","LanguageDetector","init","fallbackLng","resources","cn","translation","de","en","es","fr","in","ind","jp","ru","interpolation","escapeValue","TranslationProvider","I18nextProvider","ColumnForm","t","useTranslation","column","disabled","formTitle","onSubmit","onCancel","useFormik","initialValues","Object","assign","wipEnabled","wipLimit","values","validate","errors","handleChange","handleSubmit","handleWipLimitChange","e","persist","target","test","Grid","container","spacing","item","xs","Divider","TextField","name","label","error","Boolean","helperText","onChange","multiline","rows","FormControlLabel","control","Checkbox","FormControl","FormLabel","RadioGroup","row","aria-label","keys","map","colorKey","Button","RecordForm","useColumnHeaderStyles","divider","marginTop","marginBottom","ColumnHeader","useColumnActionStyles","ColumnAction","showAddRecordAction","showAllRecordDeleteAction","disableAllRecordDeleteAction","disableAddRecordAction","onAddRecord","onDeleteAllRecord","useColumnCardListStyles","card","ColumnCardList","CardComponent","onRecordEdit","onRecordDelete","records","length","index","id","useColumnFooterStyles","ColumnFooter","content","useColumnStyles","Column","onAllRecordDelete","showDeleteAllRecordAction","ColumnHeaderComponent","ColumnActionComponent","ColumnCardListComponent","ColumnFooterComponent","caption","Infinity","columnColor","open","actions","dialog","setDialog","handleAddRecord","handleRecordEdit","handleRecordDelete","handleAllRecordDelete","handleOpenDialog","handleCloseDialog","handleOpenDeleteDialog","handleOpenEditDialog","handleOpenAddRecordDialog","handleOpenEditRecordDialog","handleOpenDeleteRecordDialog","handleOpenDeleteAllRecordDialog","elevation","Dialog","onClose","DialogTitle","DialogContent","DialogActions","useBoardStyles","width","Board","columns","ColumnComponent","placeholder","onColumnEdit","onColumnDelete","KanbanCard","recordColor","draggableId","provided","draggableProps","dragHandleProps","KanbanInnerColumnCardList","memo","KanbanColumnCardList","columnId","isDropDisabled","droppableId","droppableProps","KanbanColumn","_column","KanbanBoard","onCardMove","onColumnMove","getColumnById","find","getColumnByIndex","handleDragEnd","result","source","destination","onDragEnd","direction","getId","uuidv4","reorder","startIndex","endIndex","Array","from","splice","removed","getCreatedAt","moment","format","TitleContext","setTitle","TitleContextProvider","contextValue","AddColumnButton","setOpen","ClearBoardButton","onClear","handleClear","LanguageButton","anchorEl","setAnchorEl","handleClose","handleChangeLanguage","lng","changeLanguage","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","MenuItem","DarkThemeButton","SaveButton","data","window","parent","postMessage","TitleInput","useToolbarStyles","Toolbar","clearButtonDisabled","onNewColumn","onClearBoard","AppBar","disableRipple","disableTouchRipple","disableFocusRipple","flexGrow","useKanbanBoardStyles","toolbar","mixins","initialState","KanbanBoardContainer","EventHandler","eventData","baseTitle","substring","lastIndexOf","str","trim","btoa","atob","err","isBase64","base64String","repeat","binaryString","bytes","Uint8Array","i","charCodeAt","TextDecoder","decode","decodeBase64","addEventListener","removeEventListener","cloneColumns","getColumnIndex","findIndex","c","getRecordIndex","recordId","r","handleClearBoard","handleAddColumn","handleColumnMove","updatedColumns","handleColumnEdit","_columns","columnIndex","handleColumnDelete","handleCardMove","sourceColumn","destinationColumn","sourceIndex","destinationIndex","getRecords","current","next","reordered","newColumns","reorderCards","recordIndex","_record","useEffect","PersonalKanban","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3373143f.chunk.js","sourcesContent":["import { Column } from \"PersonalKanban/types\";\n\nconst DARK_MODE = \"dark_mode\";\nconst COLUMNS = \"columns\";\n\nexport function getItem(key: string) {\n  return JSON.parse(localStorage.getItem(key)!);\n}\n\nexport function setItem(key: string, value: any) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getDarkMode() {\n  return getItem(DARK_MODE);\n}\n\nexport function setDarkMode(value: boolean) {\n  return setItem(DARK_MODE, value);\n}\n\nexport function setColumns(value: Column[]) {\n  return setItem(COLUMNS, value);\n}\n\nexport function getColumns() {\n  return getItem(COLUMNS);\n}\n\nconst StorageService = {\n  getItem,\n  setItem,\n  getDarkMode,\n  setDarkMode,\n  getColumns,\n  setColumns,\n};\n\nexport default StorageService;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport {\n  purple,\n  indigo,\n  blue,\n  green,\n  yellow,\n  orange,\n  red,\n  brown,\n  blueGrey,\n  lightGreen,\n} from \"@material-ui/core/colors\";\n\nimport StorageService from \"PersonalKanban/services/StorageService\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    custom?: any;\n  }\n  interface ThemeOptions {\n    custom?: any;\n  }\n}\n\nconst ThemeContext = React.createContext({});\n\ntype ThemeProviderProps = {\n  darkTheme?: boolean;\n};\n\nconst pastelCode = 200;\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\n  const { children } = props;\n\n  const [darkTheme, setDarkTheme] = React.useState(\n    props.darkTheme || StorageService.getDarkMode()\n  );\n\n  const handleToggleDarkTheme = React.useCallback(() => {\n    setDarkTheme((darkTheme: Boolean | undefined) => {\n      StorageService.setDarkMode(!darkTheme);\n      return !darkTheme;\n    });\n  }, []);\n\n  const theme: Theme = createMuiTheme({\n    palette: {\n      primary: darkTheme ? lightGreen : brown,\n      secondary: blueGrey,\n      type: darkTheme ? \"dark\" : \"light\",\n    },\n    overrides: {\n      MuiPaper: {\n        root: {\n          cursor: \"pointer\",\n          padding: 8,\n        },\n      },\n      MuiDivider: {\n        root: {\n          backgroundColor: \"rgba(255,255,255,0.5)\",\n        },\n      },\n    },\n    typography: {\n      fontFamily: \"'Nunito', sans-serif\",\n      fontWeightLight: 300,\n      fontWeightMedium: 400,\n      fontWeightRegular: 400,\n      fontWeightBold: 700,\n    },\n    props: {\n      MuiDivider: {\n        light: darkTheme ? false : true,\n      },\n      MuiTextField: {\n        variant: \"outlined\",\n        margin: \"dense\",\n        fullWidth: true,\n      },\n      MuiButton: {\n        size: \"small\",\n      },\n      MuiRadio: {\n        size: \"small\",\n      },\n    },\n    custom: {\n      colors: {\n        pastel: {\n          violet: purple[pastelCode],\n          indigo: indigo[pastelCode],\n          blue: blue[pastelCode],\n          green: green[pastelCode],\n          yellow: yellow[pastelCode],\n          orange: orange[pastelCode],\n          red: red[pastelCode],\n        },\n      },\n    },\n  });\n\n  const value = React.useMemo(\n    () => ({\n      darkTheme,\n      handleToggleDarkTheme,\n    }),\n    [darkTheme, handleToggleDarkTheme]\n  );\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): any => React.useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport MuiIconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\nimport InvertColorsOffIcon from \"@material-ui/icons/InvertColorsOff\";\nimport LanguageIcon from \"@material-ui/icons/Translate\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport DeveloperBoardIcon from \"@material-ui/icons/DeveloperBoard\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport SaveIcon from \"@material-ui/icons/SaveRounded\";\nconst icons = {\n  edit: EditIcon,\n  delete: DeleteIcon,\n  add: AddIcon,\n  deleteSweep: DeleteSweepIcon,\n  deleteForever: DeleteForeverIcon,\n  invertColors: InvertColorsIcon,\n  invertColorsOff: InvertColorsOffIcon,\n  gitHub: GitHubIcon,\n  language: LanguageIcon,\n  personalKanban: DeveloperBoardIcon,\n  info: InfoIcon,\n  list: ListIcon,\n  save: SaveIcon\n};\n\ntype IconButtonProps = MuiIconButtonProps & {\n  icon: keyof typeof icons;\n  iconProps?: any;\n  component?: any;\n  href?: string;\n  target?: string;\n};\n\nconst IconButton: React.FC<IconButtonProps> = (props) => {\n  const { icon, iconProps = {}, ...rest } = props;\n  const Icon = icons[icon];\n  return Icon ? (\n    <MuiIconButton size=\"small\" {...rest}>\n      <Icon fontSize=\"small\" {...iconProps} />\n    </MuiIconButton>\n  ) : null;\n};\n\nexport default IconButton;\n","import IconButton from \"./IconButton\";\n\nexport default IconButton;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Record } from \"PersonalKanban/types\";\nimport IconButton from \"PersonalKanban/components/IconButton\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    height: 150,\n  },\n  description: {\n    maxHeight: \"5rem\",\n    minHeight: \"5rem\",\n    display: \"-webkit-box\",\n    \"-webkit-line-clamp\": 4,\n    \"-webkit-box-orient\": \"vertical\",\n    overflow: \"hidden\",\n    whiteSpace: \"pre-line\",\n  },\n}));\n\ntype CardProps = {\n  record: Record;\n  className?: string;\n  style?: any;\n  innerRef?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n  onDelete?: any;\n  onEdit?: any;\n};\n\nconst Card: React.FC<CardProps> = (props) => {\n  const {\n    record,\n    className,\n    innerRef,\n    style,\n    showEditAction,\n    showDeleteAction,\n    onDelete,\n    onEdit,\n    ...rest\n  } = props;\n  const { title, description, createdAt } = record;\n\n  const classes = useStyles();\n\n  const handleEdit = React.useCallback(() => onEdit(record), [record, onEdit]);\n\n  const handleDelete = React.useCallback(() => onDelete(record), [\n    record,\n    onDelete,\n  ]);\n\n  return (\n    <Paper\n      className={clsx(classes.paper, className)}\n      style={style}\n      ref={innerRef}\n      {...rest}\n    >\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Typography title={title} gutterBottom noWrap>\n          <b>{title}</b>\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\">\n          {showEditAction && <IconButton icon=\"edit\" onClick={handleEdit} />}\n          {showDeleteAction && (\n            <IconButton icon=\"deleteForever\" onClick={handleDelete} />\n          )}\n        </Box>\n      </Box>\n      <Typography\n        title={description}\n        className={classes.description}\n        variant=\"body2\"\n        gutterBottom\n      >\n        {description}\n      </Typography>\n      <Typography component=\"p\" variant=\"caption\" noWrap>\n        {createdAt}\n      </Typography>\n    </Paper>\n  );\n};\n\nCard.defaultProps = {\n  showDeleteAction: true,\n  showEditAction: true,\n};\n\nexport default Card;\n","import Card from \"./Card\";\n\nexport default Card;\n","import purple from \"@material-ui/core/colors/purple\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport green from \"@material-ui/core/colors/green\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport red from \"@material-ui/core/colors/red\";\n\nconst RECORD_SHADE = 200;\n\nexport const RecordColor = {\n  Purple: purple[RECORD_SHADE],\n  Indigo: indigo[RECORD_SHADE],\n  Blue: blue[RECORD_SHADE],\n  Green: green[RECORD_SHADE],\n  Yellow: yellow[RECORD_SHADE],\n  Orange: orange[RECORD_SHADE],\n  Red: red[RECORD_SHADE],\n  Default: \"\",\n};\n\nexport const DARK_RECORD_SHADE = 500;\n\nexport const DarkRecordColor = {\n  Purple: purple[DARK_RECORD_SHADE],\n  Indigo: indigo[DARK_RECORD_SHADE],\n  Blue: blue[DARK_RECORD_SHADE],\n  Green: green[DARK_RECORD_SHADE],\n  Yellow: yellow[700],\n  Orange: orange[DARK_RECORD_SHADE],\n  Red: red[DARK_RECORD_SHADE],\n  Default: \"\",\n};\n\nconst COLUMN_SHADE = 100;\n\nexport const ColumnColor = {\n  Purple: purple[COLUMN_SHADE],\n  Indigo: indigo[COLUMN_SHADE],\n  Blue: blue[COLUMN_SHADE],\n  Green: green[COLUMN_SHADE],\n  Yellow: yellow[COLUMN_SHADE],\n  Orange: orange[COLUMN_SHADE],\n  Red: red[COLUMN_SHADE],\n  Default: \"\",\n};\n\nexport const DARK_COLUMN_SHADE = 400;\n\nexport const DarkColumnColor = {\n  Purple: purple[DARK_COLUMN_SHADE],\n  Indigo: indigo[DARK_COLUMN_SHADE],\n  Blue: blue[DARK_COLUMN_SHADE],\n  Green: green[DARK_COLUMN_SHADE],\n  Yellow: yellow[700],\n  Orange: orange[DARK_COLUMN_SHADE],\n  Red: red[DARK_COLUMN_SHADE],\n  Default: \"\",\n};\n","import React from \"react\";\nimport MuiRadio, { RadioProps as MuiRadioProps } from \"@material-ui/core/Radio\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    color: (props: any) => props.color,\n  },\n  checked: {},\n}));\n\ntype RadioProps = Omit<MuiRadioProps, \"color\"> & { color?: string };\n\nconst Radio = React.forwardRef((props: RadioProps, ref: any) => {\n  const { color, ...rest } = props;\n\n  const classes = useStyles({ color });\n\n  return (\n    <MuiRadio\n      ref={ref}\n      color=\"default\"\n      classes={color ? classes : {}}\n      {...rest}\n    />\n  );\n});\n\nexport default Radio;\n","import Radio from './Radio';\n\nexport default Radio","import React from \"react\";\nimport { I18nextProvider, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport i18next from \"i18next\";\n\nimport cn from \"PersonalKanban/assets/locales/cn/translations.json\";\nimport de from \"PersonalKanban/assets/locales/de/translations.json\";\nimport en from \"PersonalKanban/assets/locales/en/translations.json\";\nimport es from \"PersonalKanban/assets/locales/es/translations.json\";\nimport fr from \"PersonalKanban/assets/locales/fr/translations.json\";\nimport ind from \"PersonalKanban/assets/locales/in/translations.json\";\nimport ru from \"PersonalKanban/assets/locales/ru/translations.json\";\nimport jp from \"PersonalKanban/assets/locales/jp/translations.json\";\n\nexport { useTranslation } from \"react-i18next\";\n\nconst i18n = i18next.createInstance();\n\ni18n\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .init({\n    fallbackLng: \"cn\",\n    resources: {\n      cn: { translation: { ...cn } },\n      de: { translation: { ...de } },\n      en: { translation: { ...en } },\n      es: { translation: { ...es } },\n      fr: { translation: { ...fr } },\n      in: { translation: { ...ind } },\n      jp: { translation: { ...jp } },\n      ru: { translation: { ...ru } },\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\ntype TranslationProviderProps = {};\n\nconst TranslationProvider: React.FC<TranslationProviderProps> = ({\n  children,\n}) => {\n  return <I18nextProvider i18n={i18n}>{children}</I18nextProvider>;\n};\n\nexport default TranslationProvider;\n","import ColumnForm from \"./ColumnForm\";\n\nexport default ColumnForm;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nimport { Column } from \"PersonalKanban/types\";\nimport { ColumnColor } from \"PersonalKanban/enums/index\";\nimport Radio from \"PersonalKanban/components/Radio\";\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\n\ntype ColumnFormProps = {\n  column?: Partial<Column>;\n  onSubmit: any;\n  onCancel: any;\n  disabled?: boolean;\n  formTitle?: string;\n};\n\nconst ColumnForm: React.FC<ColumnFormProps> = (props) => {\n  const { t } = useTranslation();\n\n  const {\n    column,\n    disabled,\n    formTitle = t(\"addColumn\"),\n    onSubmit,\n    onCancel,\n  } = props;\n\n  const { values, errors, handleChange, handleSubmit } = useFormik({\n    initialValues: Object.assign(\n      {\n        title: \"\",\n        description: \"\",\n        color: \"\",\n        wipEnabled: false,\n        wipLimit: 0,\n      },\n      column\n    ),\n    onSubmit: (values) => {\n      onSubmit && onSubmit(values);\n    },\n    validate: (values) => {\n      const errors: any = {};\n      if (!values.title) {\n        errors.title = t(\"titleRequired\");\n      }\n\n      if (values.wipEnabled && !values.wipLimit) {\n        errors.wipLimit = t(\"limitRequired\");\n      }\n\n      return errors;\n    },\n  });\n\n  const handleWipLimitChange = React.useCallback(\n    (e) => {\n      e.persist();\n      const { value } = e.target;\n      const integerRegex = /^[0-9]*$/;\n      if (value && !integerRegex.test(value)) {\n        return;\n      }\n\n      handleChange(e);\n    },\n    [handleChange]\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography gutterBottom variant=\"h6\">\n            {formTitle}\n          </Typography>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"title\"\n            label={t(\"title\")}\n            value={values.title}\n            error={Boolean(errors.title)}\n            helperText={errors.title}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            multiline\n            rows={3}\n            name=\"description\"\n            label={t(\"description\")}\n            value={values.description}\n            error={Boolean(errors.description)}\n            helperText={errors.description}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.wipEnabled}\n                onChange={handleChange}\n                name=\"wipEnabled\"\n              />\n            }\n            label={t(\"wipLimitEnabled\")}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"wipLimit\"\n            label={t(\"wipLimit\")}\n            value={values.wipLimit}\n            error={Boolean(errors.wipLimit)}\n            helperText={errors.wipLimit}\n            disabled={disabled || !values.wipEnabled}\n            onChange={handleWipLimitChange}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{t(\"background\")}</FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"background\"\n              name=\"color\"\n              value={values.color}\n              onChange={handleChange}\n            >\n              {Object.keys(ColumnColor).map((key) => {\n                const colorKey = key as keyof typeof ColumnColor;\n                return (\n                  <Radio\n                    key={colorKey}\n                    value={colorKey}\n                    color={ColumnColor[colorKey]}\n                  />\n                );\n              })}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\n            {t(\"cancel\")}\n          </Button>\n          &nbsp;\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={disabled}\n          >\n            {t(\"submit\")}\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default ColumnForm;\n","import RecordForm from \"./RecordForm\";\n\nexport default RecordForm;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nimport { Record } from \"PersonalKanban/types\";\nimport { RecordColor } from \"PersonalKanban/enums\";\nimport Radio from \"PersonalKanban/components/Radio\";\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\n\ntype RecordFormProps = {\n  record?: Record;\n  onSubmit: any;\n  onCancel?: any;\n  disabled?: boolean;\n  formTitle?: string;\n};\n\nconst RecordForm: React.FC<RecordFormProps> = (props) => {\n  const { t } = useTranslation();\n\n  const {\n    record,\n    disabled,\n    formTitle = t(\"addRecord\"),\n    onSubmit,\n    onCancel,\n  } = props;\n\n  const { values, errors, handleChange, handleSubmit } = useFormik({\n    initialValues: Object.assign(\n      {\n        title: \"\",\n        description: \"\",\n        color: \"\",\n      },\n      record\n    ),\n    onSubmit: (values) => {\n      onSubmit && onSubmit(values);\n    },\n    validate: (values) => {\n      const errors: any = {};\n      if (!values.title) {\n        errors.title = t(\"titleRequired\");\n      }\n\n      return errors;\n    },\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography gutterBottom variant=\"h6\">\n            {formTitle}\n          </Typography>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"title\"\n            label={t(\"title\")}\n            value={values.title}\n            error={Boolean(errors.title)}\n            helperText={errors.title}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            multiline\n            rows={3}\n            name=\"description\"\n            label={t(\"description\")}\n            value={values.description}\n            error={Boolean(errors.description)}\n            helperText={errors.description}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{t(\"background\")}</FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"background\"\n              name=\"color\"\n              value={values.color}\n              onChange={handleChange}\n            >\n              {Object.keys(RecordColor).map((key) => {\n                const colorKey = key as keyof typeof RecordColor;\n                return (\n                  <Radio\n                    key={colorKey}\n                    value={colorKey}\n                    color={RecordColor[colorKey]}\n                  />\n                );\n              })}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\n            {t(\"cancel\")}\n          </Button>\n          &nbsp;\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={disabled}\n          >\n            {t(\"submit\")}\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default RecordForm;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from \"PersonalKanban/components/Card\";\nimport IconButton from \"PersonalKanban/components/IconButton\";\nimport ColumnForm from \"PersonalKanban/components/ColumnForm\";\nimport RecordForm from \"PersonalKanban/components/RecordForm\";\nimport { ColumnColor, DarkColumnColor } from \"PersonalKanban/enums\";\nimport { Record, Column as ColumnType } from \"PersonalKanban/types\";\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\n\nconst useColumnHeaderStyles = makeStyles((theme) => ({\n  divider: {\n    marginTop: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\ntype ColumnHeaderProps = {\n  title: string;\n  description?: string;\n  onEdit?: any;\n  onDelete?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n};\n\nexport const ColumnHeader: React.FC<ColumnHeaderProps> = (props) => {\n  const {\n    title,\n    description,\n    showEditAction,\n    showDeleteAction,\n    onEdit,\n    onDelete,\n  } = props;\n\n  const classes = useColumnHeaderStyles();\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        marginBottom={Boolean(description) ? 0.5 : 0}\n      >\n        <Typography variant=\"h6\" title={title} noWrap>\n          <b>{title}</b>\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\">\n          {showEditAction && <IconButton icon=\"edit\" onClick={onEdit} />}\n          {showDeleteAction && (\n            <IconButton icon=\"deleteForever\" onClick={onDelete} />\n          )}\n        </Box>\n      </Box>\n      <Typography title={description} noWrap gutterBottom>\n        {description}\n      </Typography>\n\n      <Divider className={classes.divider} />\n    </>\n  );\n};\n\nColumnHeader.defaultProps = { showEditAction: true, showDeleteAction: true };\n\nconst useColumnActionStyles = makeStyles((theme) => ({\n  divider: {\n    marginTop: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\ntype ColumnActionProps = {\n  onAddRecord?: any;\n  onDeleteAllRecord?: any;\n  showAddRecordAction?: boolean;\n  showAllRecordDeleteAction?: boolean;\n  disableAllRecordDeleteAction?: boolean;\n  disableAddRecordAction?: boolean;\n};\n\nexport const ColumnAction: React.FC<ColumnActionProps> = (props) => {\n  const {\n    showAddRecordAction,\n    showAllRecordDeleteAction,\n    disableAllRecordDeleteAction,\n    disableAddRecordAction,\n    onAddRecord,\n    onDeleteAllRecord,\n  } = props;\n  const classes = useColumnActionStyles();\n  return (\n    <>\n      {showAddRecordAction && (\n        <IconButton\n          icon=\"add\"\n          disabled={disableAddRecordAction}\n          onClick={onAddRecord}\n        />\n      )}\n      {showAllRecordDeleteAction && (\n        <IconButton\n          icon=\"delete\"\n          disabled={disableAllRecordDeleteAction}\n          onClick={onDeleteAllRecord}\n        />\n      )}\n\n      <Divider className={classes.divider} />\n    </>\n  );\n};\n\nColumnAction.defaultProps = {\n  showAddRecordAction: true,\n  showAllRecordDeleteAction: true,\n};\n\nconst useColumnCardListStyles = makeStyles((theme) => ({\n  card: {\n    marginBottom: theme.spacing(),\n  },\n}));\n\ntype ColumnCardListProps = {\n  column: ColumnType;\n  innerRef?: any;\n  CardComponent?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n};\n\nexport const ColumnCardList: React.FC<ColumnCardListProps> = (props) => {\n  const {\n    column,\n    innerRef,\n    CardComponent = Card,\n    onRecordEdit,\n    onRecordDelete,\n  } = props;\n  const { records = [] } = column;\n\n  const { t } = useTranslation();\n\n  const classes = useColumnCardListStyles();\n\n  return (\n    <div ref={innerRef}>\n      {records && records.length ? (\n        records.map((record: Record, index) => (\n          <CardComponent\n            key={record.id}\n            record={record}\n            className={classes.card}\n            index={index}\n            onEdit={onRecordEdit}\n            onDelete={onRecordDelete}\n          />\n        ))\n      ) : (\n        <Typography>{t(\"noRecord\")}</Typography>\n      )}\n    </div>\n  );\n};\n\nconst useColumnFooterStyles = makeStyles((theme) => ({\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(0.5),\n  },\n}));\n\ntype ColumnFooterProps = {\n  content?: string;\n};\n\nexport const ColumnFooter: React.FC<ColumnFooterProps> = (props) => {\n  const { content } = props;\n\n  const classes = useColumnFooterStyles();\n  return (\n    <>\n      <Divider className={classes.divider} />\n      <Typography variant=\"caption\" component=\"p\" title={content} noWrap>\n        {content}\n      </Typography>\n    </>\n  );\n};\n\nconst useColumnStyles = makeStyles(() => ({\n  paper: (props: any) => ({\n    backgroundColor: props.backgroundColor,\n  }),\n}));\n\ntype ColumnProps = {\n  column: ColumnType;\n  className?: string;\n  innerRef?: any;\n  onEdit?: any;\n  onDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n  showAddRecordAction?: boolean;\n  showDeleteAllRecordAction?: boolean;\n  ColumnHeaderComponent?: any;\n  ColumnActionComponent?: any;\n  ColumnCardListComponent?: any;\n  ColumnFooterComponent?: any;\n};\n\nconst Column: React.FC<ColumnProps> = (props) => {\n  const {\n    column,\n    className,\n    innerRef,\n    onEdit,\n    onDelete,\n    onAddRecord,\n    onAllRecordDelete,\n    showDeleteAction,\n    showEditAction,\n    onRecordEdit,\n    onRecordDelete,\n    showAddRecordAction,\n    showDeleteAllRecordAction,\n    ColumnHeaderComponent = ColumnHeader,\n    ColumnActionComponent = ColumnAction,\n    ColumnCardListComponent = ColumnCardList,\n    ColumnFooterComponent = ColumnFooter,\n    ...rest\n  } = props;\n\n  const {\n    title,\n    description,\n    caption,\n    color,\n    records = [],\n    wipEnabled,\n    wipLimit = Infinity,\n  } = column;\n\n  const disableAddRecordAction = wipEnabled && wipLimit <= records.length;\n\n  const disableAllRecordDeleteAction = !records.length;\n\n  const columnColor = color as keyof typeof ColumnColor;\n\n  const { darkTheme } = useTheme();\n\n  const { t } = useTranslation();\n\n  const classes = useColumnStyles({\n    backgroundColor: darkTheme\n      ? DarkColumnColor[columnColor]\n      : ColumnColor[columnColor],\n  });\n\n  const [dialog, setDialog] = React.useState({\n    open: false,\n    title: \"\",\n    content: null,\n    actions: null,\n  });\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete && onDelete({ column, e });\n    },\n    [column, onDelete]\n  );\n\n  const handleEdit = React.useCallback(\n    (column: ColumnType) => {\n      onEdit && onEdit({ column });\n    },\n    [onEdit]\n  );\n\n  const handleAddRecord = React.useCallback(\n    (record: Record) => {\n      onAddRecord && onAddRecord({ column, record });\n    },\n    [column, onAddRecord]\n  );\n\n  const handleRecordEdit = React.useCallback(\n    (record: Record) => {\n      onRecordEdit({ column, record });\n    },\n    [column, onRecordEdit]\n  );\n\n  const handleRecordDelete = React.useCallback(\n    (record: Record) => {\n      onRecordDelete({ column, record });\n    },\n    [column, onRecordDelete]\n  );\n\n  const handleAllRecordDelete = React.useCallback(() => {\n    onAllRecordDelete({ column });\n  }, [column, onAllRecordDelete]);\n\n  const handleOpenDialog = React.useCallback(({ content, title, actions }) => {\n    setDialog({ content, title, actions, open: true });\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setDialog(() => ({ content: null, title: \"\", actions: null, open: false }));\n  }, []);\n\n  const handleOpenDeleteDialog = React.useCallback(() => {\n    const content = <Typography>{t(\"deleteColumnConfirmation\")}</Typography>;\n    const actions = (\n      <>\n        <Button variant=\"outlined\" onClick={handleCloseDialog}>\n          {t(\"cancel\")}\n        </Button>\n        &nbsp;\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(e) => {\n            handleCloseDialog();\n            handleDelete(e);\n          }}\n        >\n          {t(\"delete\")}\n        </Button>\n      </>\n    );\n\n    handleOpenDialog({ content, actions, title: t(\"deleteColumn\") });\n  }, [t, handleOpenDialog, handleDelete, handleCloseDialog]);\n\n  const handleOpenEditDialog = React.useCallback(() => {\n    const content = (\n      <ColumnForm\n        column={column}\n        formTitle={t(\"editColumn\")}\n        onSubmit={(column: any) => {\n          handleCloseDialog();\n          handleEdit(column);\n        }}\n        onCancel={handleCloseDialog}\n      ></ColumnForm>\n    );\n\n    handleOpenDialog({ content });\n  }, [column, t, handleOpenDialog, handleCloseDialog, handleEdit]);\n\n  const handleOpenAddRecordDialog = React.useCallback(() => {\n    const content = (\n      <RecordForm\n        onSubmit={(record: Record) => {\n          handleCloseDialog();\n          handleAddRecord(record);\n        }}\n        onCancel={handleCloseDialog}\n      ></RecordForm>\n    );\n\n    handleOpenDialog({ content });\n  }, [handleOpenDialog, handleCloseDialog, handleAddRecord]);\n\n  const handleOpenEditRecordDialog = React.useCallback(\n    (record: Record) => {\n      const content = (\n        <RecordForm\n          record={record}\n          onSubmit={(record: Record) => {\n            handleCloseDialog();\n            handleRecordEdit(record);\n          }}\n          onCancel={handleCloseDialog}\n        ></RecordForm>\n      );\n\n      handleOpenDialog({ content });\n    },\n    [handleOpenDialog, handleCloseDialog, handleRecordEdit]\n  );\n\n  const handleOpenDeleteRecordDialog = React.useCallback(\n    (record: Record) => {\n      const content = <Typography>{t(\"deleteRecordConfirmation\")}</Typography>;\n      const actions = (\n        <>\n          <Button variant=\"outlined\" onClick={handleCloseDialog}>\n            {t(\"cancel\")}\n          </Button>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              handleCloseDialog();\n              handleRecordDelete(record);\n            }}\n          >\n            {t(\"delete\")}\n          </Button>\n        </>\n      );\n\n      handleOpenDialog({ content, actions, title: t(\"deleteRecord\") });\n    },\n    [t, handleOpenDialog, handleCloseDialog, handleRecordDelete]\n  );\n\n  const handleOpenDeleteAllRecordDialog = React.useCallback(\n    (record: Record) => {\n      const content = (\n        <Typography>{t(\"deleteAllRecordConfirmation\")}</Typography>\n      );\n      const actions = (\n        <>\n          <Button variant=\"outlined\" onClick={handleCloseDialog}>\n            {t(\"cancel\")}\n          </Button>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              handleCloseDialog();\n              handleAllRecordDelete();\n            }}\n          >\n            {t(\"delete\")}\n          </Button>\n        </>\n      );\n\n      handleOpenDialog({ content, actions, title: t(\"deleteAllRecord\") });\n    },\n    [t, handleOpenDialog, handleCloseDialog, handleAllRecordDelete]\n  );\n\n  return (\n    <Paper\n      elevation={4}\n      className={clsx(className, classes.paper)}\n      ref={innerRef}\n      {...rest}\n    >\n      <ColumnHeaderComponent\n        title={title}\n        description={description}\n        showEditAction={showEditAction}\n        showDeleteAction={showDeleteAction}\n        onEdit={handleOpenEditDialog}\n        onDelete={handleOpenDeleteDialog}\n      />\n      <ColumnActionComponent\n        showAddRecordAction={showAddRecordAction}\n        showDeleteAllRecordAction={showDeleteAllRecordAction}\n        disableAddRecordAction={disableAddRecordAction}\n        disableAllRecordDeleteAction={disableAllRecordDeleteAction}\n        onAddRecord={handleOpenAddRecordDialog}\n        onDeleteAllRecord={handleOpenDeleteAllRecordDialog}\n      />\n      <ColumnCardListComponent\n        column={column}\n        onRecordEdit={handleOpenEditRecordDialog}\n        onRecordDelete={handleOpenDeleteRecordDialog}\n      />\n      <ColumnFooterComponent content={caption} />\n      <Dialog open={dialog.open} onClose={handleCloseDialog}>\n        <DialogTitle>{dialog.title}</DialogTitle>\n        <DialogContent>{dialog.content}</DialogContent>\n        <DialogActions>{dialog.actions}</DialogActions>\n      </Dialog>\n    </Paper>\n  );\n};\n\nexport default Column;\n","import Column from \"./Column\";\nexport { ColumnCardList, ColumnFooter, ColumnHeader } from \"./Column\";\n\nexport default Column;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Column from \"PersonalKanban/components/Column\";\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\nimport { Column as ColumnType } from \"PersonalKanban/types\";\nimport { COLUMN_WIDTH } from \"PersonalKanban/constants\";\n\nconst useBoardStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    display: \"inline-flex\",\n    width: \"fit-content\",\n  },\n  column: {\n    width: COLUMN_WIDTH,\n    margin: theme.spacing(),\n    height: \"fit-content\",\n  },\n}));\n\ntype BoardProps = {\n  columns: ColumnType[];\n  innerRef: any;\n  ColumnComponent: any;\n  placeholder?: any;\n  onColumnEdit?: any;\n  onColumnDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n};\n\nconst Board: React.FC<BoardProps> = (props) => {\n  const {\n    columns,\n    innerRef,\n    ColumnComponent = Column,\n    placeholder,\n    onColumnEdit,\n    onColumnDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n    ...rest\n  } = props;\n\n  const classes = useBoardStyles();\n\n  const { t } = useTranslation();\n\n  return (\n    <div className={classes.root} ref={innerRef} {...rest}>\n      {columns && columns.length ? (\n        columns.map((column, index) => (\n          <ColumnComponent\n            index={index}\n            key={column.id}\n            column={column}\n            className={classes.column}\n            onEdit={onColumnEdit}\n            onDelete={onColumnDelete}\n            onAddRecord={onAddRecord}\n            onRecordEdit={onRecordEdit}\n            onRecordDelete={onRecordDelete}\n            onAllRecordDelete={onAllRecordDelete}\n          />\n        ))\n      ) : (\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Typography>{t(\"noColumn\")}</Typography>\n        </Box>\n      )}\n      {placeholder}\n    </div>\n  );\n};\n\nexport default Board;\n","export const COLUMN_WIDTH = 250;\n","import Board from \"./Board\";\n\nexport default Board;\n","import KanbanCard from \"./KanbanCard\";\n\nexport default KanbanCard;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport Card from \"PersonalKanban/components/Card\";\nimport { Record } from \"PersonalKanban/types\";\nimport { RecordColor, DarkRecordColor } from \"PersonalKanban/enums\";\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\n\ntype KanbanCardProps = {\n  record: Record;\n  index: number;\n  className?: string;\n  onEdit?: any;\n  onDelete?: any;\n};\n\nconst KanbanCard: React.FC<KanbanCardProps> = (props) => {\n  const { record, index, className, onEdit, onDelete } = props;\n\n  const recordColor = record.color as keyof typeof RecordColor;\n\n  const { darkTheme } = useTheme();\n\n  return (\n    <Draggable draggableId={record.id} index={index}>\n      {(provided) => (\n        <Card\n          key={record.id}\n          innerRef={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={{\n            ...provided.draggableProps.style,\n            backgroundColor: darkTheme\n              ? DarkRecordColor[recordColor]\n              : RecordColor[recordColor],\n          }}\n          record={record}\n          className={className}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      )}\n    </Draggable>\n  );\n};\n\nexport default KanbanCard;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport KanbanCard from \"PersonalKanban/components/KanbanCard\";\nimport Column, { ColumnCardList } from \"PersonalKanban/components/Column\";\nimport { Column as ColumnType } from \"PersonalKanban/types\";\n\ntype KanbanInnerColumnCardListProps = {\n  column: ColumnType;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n};\n\nconst KanbanInnerColumnCardList: React.FC<KanbanInnerColumnCardListProps> = React.memo(\n  (props) => {\n    const { column, onRecordEdit, onRecordDelete } = props;\n    return (\n      <ColumnCardList\n        column={column}\n        CardComponent={KanbanCard}\n        onRecordEdit={onRecordEdit}\n        onRecordDelete={onRecordDelete}\n      />\n    );\n  }\n);\n\ntype KanbanColumnCardListProps = {\n  column: ColumnType;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n};\n\nconst KanbanColumnCardList: React.FC<KanbanColumnCardListProps> = (props) => {\n  const { column, onRecordEdit, onRecordDelete } = props;\n  const { id: columnId, records = [], wipEnabled, wipLimit = false } = column;\n  const isDropDisabled = wipEnabled && wipLimit <= records?.length;\n  return (\n    <Droppable droppableId={columnId} isDropDisabled={isDropDisabled}>\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.droppableProps}>\n          <KanbanInnerColumnCardList\n            column={column}\n            onRecordEdit={onRecordEdit}\n            onRecordDelete={onRecordDelete}\n          />\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\ntype KanbanColumnProps = {\n  column: ColumnType;\n  index: number;\n  className?: string;\n  onEdit?: any;\n  onDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n};\n\nconst KanbanColumn: React.FC<KanbanColumnProps> = (props) => {\n  const {\n    column,\n    index,\n    className,\n    onEdit,\n    onDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n  } = props;\n\n  const { t } = useTranslation();\n\n  const _column = Object.assign({}, column, {\n    caption: column.wipEnabled\n      ? `${t(\"wipLimit\")} :${column.wipLimit}`\n      : column.createdAt,\n  });\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {(provided) => (\n        <Column\n          innerRef={provided.innerRef}\n          column={_column}\n          className={className}\n          ColumnCardListComponent={KanbanColumnCardList}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onAddRecord={onAddRecord}\n          onRecordEdit={onRecordEdit}\n          onRecordDelete={onRecordDelete}\n          onAllRecordDelete={onAllRecordDelete}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        />\n      )}\n    </Draggable>\n  );\n};\n\nexport default KanbanColumn;\n","import KanbanColumn from \"./KanbanColumn\";\n\nexport default KanbanColumn;\n","import KanbanBoard from \"./KanbanBoard\";\n\nexport default KanbanBoard;\n","import React from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport Board from \"PersonalKanban/components/Board\";\nimport KanbanColumn from \"PersonalKanban/components/KanbanColumn\";\nimport { Column } from \"PersonalKanban/types\";\n\ntype KanbanBoardProps = {\n  columns: Column[];\n  onCardMove?: any;\n  onColumnMove?: any;\n  onColumnEdit?: any;\n  onColumnDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n  ColumnComponent?: any;\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = (props) => {\n  const {\n    columns,\n    onCardMove,\n    onColumnMove,\n    onColumnEdit,\n    onColumnDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n    ColumnComponent = KanbanColumn,\n  } = props;\n\n  const getColumnById = React.useCallback(\n    (columnId) => columns.find((column) => column.id === columnId),\n    [columns]\n  );\n\n  const getColumnByIndex = React.useCallback((index) => columns[index], [\n    columns,\n  ]);\n\n  const handleDragEnd = React.useCallback(\n    (result) => {\n      const { source, destination, type } = result;\n\n      if (!destination) {\n        // Invalid Destination\n        return;\n      }\n\n      if (\n        source.droppableId === destination.droppableId &&\n        source.index === destination.index\n      ) {\n        // Drop position is same as original\n        return;\n      }\n\n      if (type === \"COLUMN\") {\n        onColumnMove({\n          column: getColumnByIndex(source.index),\n          index: destination.index,\n        });\n        return;\n      }\n\n      const record = getColumnById(source.droppableId)?.records?.[source.index];\n\n      onCardMove({\n        source: getColumnById(source.droppableId),\n        column: getColumnById(destination.droppableId),\n        record,\n        index: destination.index,\n      });\n    },\n    [onColumnMove, onCardMove, getColumnByIndex, getColumnById]\n  );\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"BOARD\" type=\"COLUMN\" direction=\"horizontal\">\n        {(provided) => (\n          <>\n            <Board\n              innerRef={provided.innerRef}\n              ColumnComponent={ColumnComponent}\n              {...provided.droppableProps}\n              columns={columns}\n              placeholder={provided.placeholder}\n              onColumnEdit={onColumnEdit}\n              onColumnDelete={onColumnDelete}\n              onAddRecord={onAddRecord}\n              onRecordEdit={onRecordEdit}\n              onRecordDelete={onRecordDelete}\n              onAllRecordDelete={onAllRecordDelete}\n            />\n          </>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default KanbanBoard;\n","import { v4 as uuidv4 } from \"uuid\";\nimport moment from \"moment\";\n\nimport { Column } from \"PersonalKanban/types\";\n\nexport const getId = (): string => {\n  return uuidv4();\n};\n\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nexport const getCreatedAt = () => {\n  return `${moment().format(\"YYYY-MM-DD\")} ${moment().format(\"h:mm:ss a\")}`;\n};\n\nexport const reorderCards = ({\n  columns,\n  sourceColumn,\n  destinationColumn,\n  sourceIndex,\n  destinationIndex,\n}: {\n  columns: Column[];\n  sourceColumn: Column;\n  destinationColumn: Column;\n  sourceIndex: number;\n  destinationIndex: number;\n}) => {\n  const getColumnIndex = (columnId: string) =>\n    columns.findIndex((c) => c.id === columnId);\n\n  const getRecords = (columnId: string) => [\n    ...columns.find((c) => c.id === columnId)?.records!,\n  ];\n\n  const current = getRecords(sourceColumn.id);\n  const next = getRecords(destinationColumn.id);\n  const target = current[sourceIndex];\n\n  // moving to same list\n  if (sourceColumn.id === destinationColumn.id) {\n    const reordered = reorder(current, sourceIndex, destinationIndex);\n    const newColumns = columns.map((c) => ({ ...c }));\n    newColumns[getColumnIndex(sourceColumn.id)].records = reordered;\n    return newColumns;\n  }\n\n  // moving to different list\n  current.splice(sourceIndex, 1);\n  next.splice(destinationIndex, 0, target);\n  const newColumns = columns.map((c) => ({ ...c }));\n  newColumns[getColumnIndex(sourceColumn.id)].records = current;\n  newColumns[getColumnIndex(destinationColumn.id)].records = next;\n  return newColumns;\n};\n\nexport const getInitialState = () => {\n  return [\n    {\n      id: getId(),\n      title: \"准备\",\n      color: \"Orange\",\n      records: [\n        {\n          id: getId(),\n          color: \"Yellow\",\n          title: \"初始化\",\n          description:\n            \"可以删除这块板子。如果要重新开始，单击主工具栏上的删除按钮。\",\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n    {\n      id: getId(),\n      title: \"进行中\",\n      color: \"Red\",\n      records: [\n        {\n          id: getId(),\n          color: \"Purple\",\n          title: \"进行中的模块\",\n          description: \"此处是进行中的模块\",\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n    {\n      id: getId(),\n      title: \"结束\",\n      color: \"Green\",\n      records: [\n        {\n          id: getId(),\n          color: \"Indigo\",\n          title: \"已结束\",\n          description: \"已结束的模块\",\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n  ];\n};\n","// 导入必要的React库和类型\nimport React, { createContext, useState } from \"react\";\n\n// 定义上下文的类型别名，清晰指定上下文中包含的数据结构\ninterface TitleContextType {\n    title: string; // 当前的标题\n    setTitle: (newTitle: string) => void; // 设置新标题的函数\n}\n\n// 创建一个上下文实例，初始化默认值\nexport const TitleContext = createContext<TitleContextType>({\n    title: \"未命名看板\", // 默认标题\n    setTitle: () => {}, // 默认的空函数，用于设置标题\n});\n\n// 定义一个组件，它作为上下文的提供者\nexport const TitleContextProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    // 使用useState Hook来管理标题状态\n    // 使用useState Hook来管理标题状态\n    const [title, setTitle] = useState<string>(\"未命名看板\"); // 注意这里改名为setTitleRaw\n\n    // 添加日志记录的setTitle函数\n    // const setTitle = (newTitle: string) => {\n    //     console.log(\"setTitle function executed with:\", newTitle);\n    //     setTitleRaw(newTitle);\n    // };\n    // 准备提供给上下文的值对象\n    const contextValue = {\n        title, // 当前的标题状态\n        setTitle, // 设置标题的函数\n    };\n\n    // 使用TitleContext.Provider包裹子组件，使得其后代组件可以访问到title和setTitle\n    return (\n        <TitleContext.Provider value={contextValue}>\n            {children} {/* 渲染传递进来的子组件 */}\n        </TitleContext.Provider>\n    );\n};","import React, { useContext } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n//import useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\nimport ColumnForm from \"PersonalKanban/components/ColumnForm\";\nimport IconButton from \"PersonalKanban/components/IconButton\";\nimport { Column } from \"PersonalKanban/types\";\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\nimport StorageService from \"PersonalKanban/services/StorageService\";\nimport { TitleContext } from \"../KanbanBoard/title\";\n\ntype AddColumnButtonProps = {\n  onSubmit: any;\n};\n\nconst AddColumnButton: React.FC<AddColumnButtonProps> = (props) => {\n  const { onSubmit } = props;\n\n  const { t } = useTranslation();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenDialog = React.useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleSubmit = React.useCallback(\n    (column: Column) => {\n      onSubmit({ column });\n      handleCloseDialog();\n    },\n    [onSubmit, handleCloseDialog]\n  );\n\n  return (\n    <Box display=\"block\">\n      <IconButton icon=\"add\" color=\"primary\" onClick={handleOpenDialog}>\n        {t(\"addColumn\")}\n      </IconButton>\n      <Dialog onClose={handleCloseDialog} open={open}>\n        <DialogContent>\n          <ColumnForm onSubmit={handleSubmit} onCancel={handleCloseDialog} />\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\ntype ClearBoardButtonProps = {\n  onClear: any;\n  disabled?: boolean;\n};\n\nconst ClearBoardButton: React.FC<ClearBoardButtonProps> = (props) => {\n  const { disabled, onClear } = props;\n\n  const { t } = useTranslation();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenDialog = React.useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleClear = React.useCallback(\n    (e) => {\n      onClear({ e });\n      handleCloseDialog();\n    },\n    [onClear, handleCloseDialog]\n  );\n\n  return (\n    <Box display=\"flex\">\n      <IconButton\n        icon=\"delete\"\n        color=\"primary\"\n        disabled={disabled}\n        onClick={handleOpenDialog}\n      ></IconButton>\n      <Dialog onClose={handleCloseDialog} open={open}>\n        <DialogContent>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Typography gutterBottom variant=\"h6\">\n                {t(\"clearBoard\")}\n              </Typography>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography gutterBottom>\n                {t(\"clearBoardConfirmation\")}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Button variant=\"outlined\" onClick={handleCloseDialog}>\n                {t(\"cancel\")}\n              </Button>\n              &nbsp;\n              <Button color=\"primary\" variant=\"contained\" onClick={handleClear}>\n                {t(\"clear\")}\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\ntype LanguageButtonProps = {};\n\nconst LanguageButton: React.FC<LanguageButtonProps> = (props) => {\n  const { i18n } = useTranslation();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleChangeLanguage = (lng: string) => () => {\n    i18n.changeLanguage(lng);\n    handleClose();\n  };\n\n  return (\n    <Box display=\"block\">\n      <IconButton\n        icon={\"language\"}\n        aria-controls=\"language-menu\"\n        aria-haspopup=\"true\"\n        color=\"inherit\"\n        onClick={handleClick}\n      />\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleChangeLanguage(\"cn\")}>中文</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"en\")}>English</MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nconst DarkThemeButton: React.FC<{}> = () => {\n  const { darkTheme, handleToggleDarkTheme } = useTheme();\n\n  return (\n    <IconButton\n      color=\"inherit\"\n      icon={darkTheme ? \"invertColors\" : \"invertColorsOff\"}\n      onClick={handleToggleDarkTheme}\n    />\n  );\n};\n\nconst SaveButton: React.FC<{}> = () => {\n  const { title } = useContext(TitleContext);\n  const SaveAction = () => {   \n    const content = StorageService.getColumns();\n    //console.log(dTitle)\n    //console.log(content)\n    const save = {\n      data: JSON.stringify({ content, title }),\n      type: 'exportKanban'\n    }\n    window.parent.postMessage(save, '*')\n  }\n  //const { t } = useTranslation();\n  return (\n    <IconButton\n      color=\"inherit\"\n      icon=\"save\"\n      onClick={SaveAction}\n    />\n  );\n};\nconst TitleInput: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  //const [dataTitle, setDataTitle] = useState('未命名看板');\n  // let dataTitle = localStorage.getItem(\"__kanbantitle\")\n  // dataTitle = dataTitle ? dataTitle : t(\"undefineTitle\")\n  // const [daTitle, setDaTitle] = useState(dataTitle);\n  const { title, setTitle } = useContext(TitleContext); // 从上下文中获取title和setTitle\n  // React.useEffect(() => {\n  //   console.log(\"标题已更新为:\", title); // 用于调试，确认title是否更新\n  //   // 在这里可以执行标题更新后的其他逻辑，如DOM操作或API调用\n  // }, [title]); // 监听title变化\n  return (\n    <Box \n    display=\"block\" \n    component=\"form\"\n    >\n        <TextField\n        name=\"title\"\n        label={t(\"personalKanban\")}\n        id=\"dataTitle\"\n        variant=\"standard\"\n        value={title}\n        onChange={(e:any) => {\n          //localStorage.setItem(\"__kanbantitle\", e.target.value)\n          setTitle(e.target.value);\n          //dataTitle = e.target.value;\n        }}\n      />\n    </Box>\n  );\n};\n\n\nconst useToolbarStyles = makeStyles(() => ({\n  paper: {\n    padding: 0,\n  },\n}));\n\ntype ToolbarProps = {\n  clearButtonDisabled?: boolean;\n  onNewColumn: any;\n  onClearBoard: any;\n  //dataTitle?:any;\n};\n\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\n  const { clearButtonDisabled, onNewColumn, onClearBoard } = props;\n\n  //const { t } = useTranslation();\n\n  const classes = useToolbarStyles();\n\n  //const muiTheme = useMuiTheme();\n  //const [dataTitle, setDataTitle] = useState('')\n\n\n  //const isMobile = useMediaQuery(muiTheme.breakpoints.down(\"sm\"));\n  //dataTitle = dataTitle ? dataTitle : t(\"undefineTitle\")\n  return (\n    <AppBar color=\"default\" elevation={6} className={classes.paper}>\n      <MuiToolbar>\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconButton\n            icon=\"personalKanban\"\n            color=\"primary\"\n            size=\"small\"\n            iconProps={{ fontSize: \"large\" }}\n            disableRipple\n            disableTouchRipple\n            disableFocusRipple\n          />\n          &nbsp;\n          <TitleInput />\n        </Box>\n        <Box display=\"flex\" flexGrow={1} />\n        <Box display=\"flex\">\n          <AddColumnButton onSubmit={onNewColumn} />\n          &nbsp;\n          <ClearBoardButton\n            disabled={clearButtonDisabled}\n            onClear={onClearBoard}\n          />\n          &nbsp;\n          <LanguageButton /> &nbsp;\n          <DarkThemeButton /> &nbsp;\n          <SaveButton />\n        </Box>\n      </MuiToolbar>\n    </AppBar>\n  );\n};\n\nexport default Toolbar;\n","import React, { useContext } from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport KanbanBoard from \"PersonalKanban/components/KanbanBoard\";\nimport { Column, Record } from \"PersonalKanban/types\";\nimport {\n  getId,\n  getCreatedAt,\n  getInitialState,\n  reorder,\n  reorderCards,\n} from \"PersonalKanban/services/Utils\";\nimport StorageService from \"PersonalKanban/services/StorageService\";\nimport Toolbar from \"PersonalKanban/containers/Toolbar\";\nimport { TitleContext } from \"./title\";\n\nconst useKanbanBoardStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n}));\n\ntype KanbanBoardContainerProps = {};\n\n//let initialState = StorageService.getColumns();\n\n//if (!initialState) {\nlet initialState = getInitialState();\n// localStorage.setItem(\"__kanbantitle\", \"\");\n//}\nfunction isBase64(str : string) {\n  if (str === '' || str.trim() === '') {\n    return false\n  }\n  try {\n    return btoa(atob(str)) === str\n  } catch (err) {\n    return false\n  }\n}\nfunction decodeBase64(base64String : string) {\n  // 将Base64字符串分成每64个字符一组\n  const padding =\n    base64String.length % 4 === 0 ? 0 : 4 - (base64String.length % 4)\n  base64String += '='.repeat(padding)\n\n  // 使用atob()函数解码Base64字符串\n  const binaryString = atob(base64String)\n\n  // 将二进制字符串转换为TypedArray\n  const bytes = new Uint8Array(binaryString.length)\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i)\n  }\n\n  // 将TypedArray转换为字符串\n  return new TextDecoder('utf-8').decode(bytes)\n}\nconst KanbanBoardContainer: React.FC<KanbanBoardContainerProps> = (props) => {\n  const [columns, setColumns] = React.useState<Column[]>(initialState);\n  const { setTitle } = useContext(TitleContext); // 从上下文中获取setTitle函数\n  const EventHandler = (e: any) => {\n    const eventData = e.data\n    //const titleInput = document.querySelector<HTMLInputElement>(\"#dataTitle\");\n    // console.log(eventData)\n    if (eventData.type === 'start') {\n      if (eventData.title) {\n        const baseTitle = eventData.title.substring(0, eventData.title.lastIndexOf('.'))\n        // localStorage.setItem(\"__kanbantitle\", baseTitle)\n        // setTimeout(() => {\n        //   titleInput!.value = baseTitle\n        // }, 0)\n        setTitle(baseTitle)\n      }\n    }\n    if (eventData.type === 'init') {\n      const data = eventData.data\n      if (data) {\n        if(data.content) {\n          if (typeof data.content === 'string' && isBase64(data.content)) {\n            data.content = decodeBase64(data.content)\n            data.content = JSON.parse(data.content)\n          }\n          initialState = data.content;\n          setColumns(data.content);\n        }\n        \n        if (data.title) {\n          const baseTitle = data.title.substring(0, data.title.lastIndexOf('.'))\n          // localStorage.setItem(\"__kanbantitle\", baseTitle)\n          // setTimeout(() => {\n          //   console.log(\"Setting title to:\", baseTitle);\n          //   setTitle(baseTitle);\n          //   console.log(\"setTitle function has been called.\");\n          // }, 100)\n          setTitle(baseTitle);\n          \n        }\n        \n      }\n    }\n  }\n  window.addEventListener('load', () => {\n    window.parent.postMessage({ type: 'initSuccess' }, '*')\n    window.addEventListener('message', EventHandler)\n  })\n  window.addEventListener('unload', () => {\n    window.removeEventListener('message', EventHandler)\n  })\n  const classes = useKanbanBoardStyles();\n\n  const cloneColumns = React.useCallback((columns: Column[]) => {\n    return columns.map((column: Column) => ({\n      ...column,\n      records: [...column.records!],\n    }));\n  }, []);\n\n  const getColumnIndex = React.useCallback(\n    (id: string) => {\n      return columns.findIndex((c: Column) => c.id === id);\n    },\n    [columns]\n  );\n\n  const getRecordIndex = React.useCallback(\n    (recordId: string, columnId: string) => {\n      return columns[getColumnIndex(columnId)]?.records?.findIndex(\n        (r: Record) => r.id === recordId\n      );\n    },\n    [columns, getColumnIndex]\n  );\n\n  const handleClearBoard = React.useCallback(() => {\n    setColumns([]);\n  }, []);\n\n  const handleAddColumn = React.useCallback(\n    ({ column }: { column: Column }) => {\n      setColumns((columns: Column[]) => [\n        ...columns,\n        Object.assign(\n          { id: getId(), records: [], createdAt: getCreatedAt() },\n          column\n        ),\n      ]);\n    },\n    []\n  );\n\n  const handleColumnMove = React.useCallback(\n    ({ column, index }: { column: Column; index: number }) => {\n      const updatedColumns = reorder(columns, getColumnIndex(column.id), index);\n      setColumns(updatedColumns);\n    },\n    [columns, getColumnIndex]\n  );\n\n  const handleColumnEdit = React.useCallback(\n    ({ column }: { column: Column }) => {\n      setColumns((_columns: Column[]) => {\n        const columnIndex = getColumnIndex(column.id);\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].title = column.title;\n        columns[columnIndex].description = column.description;\n        columns[columnIndex].color = column.color;\n        columns[columnIndex].wipEnabled = column.wipEnabled;\n        columns[columnIndex].wipLimit = column.wipLimit;\n        return columns;\n      });\n    },\n    [getColumnIndex, cloneColumns]\n  );\n\n  const handleColumnDelete = React.useCallback(\n    ({ column }: { column: Column }) => {\n      setColumns((_columns: Column[]) => {\n        const columns = cloneColumns(_columns);\n        columns.splice(getColumnIndex(column.id), 1);\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex]\n  );\n\n  const handleCardMove = React.useCallback(\n    ({\n      column,\n      index,\n      source,\n      record,\n    }: {\n      column: Column;\n      index: number;\n      source: Column;\n      record: Record;\n    }) => {\n      const updatedColumns = reorderCards({\n        columns,\n        destinationColumn: column,\n        destinationIndex: index,\n        sourceColumn: source,\n        sourceIndex: getRecordIndex(record.id, source.id)!,\n      });\n\n      setColumns(updatedColumns);\n    },\n    [columns, getRecordIndex]\n  );\n\n  const handleAddRecord = React.useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      setColumns((_columns: Column[]) => {\n        const columns = cloneColumns(_columns);\n\n        columns[columnIndex].records = [\n          {\n            id: getId(),\n            title: record.title,\n            description: record.description,\n            color: record.color,\n            createdAt: getCreatedAt(),\n          },\n          ...columns[columnIndex].records,\n        ];\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex]\n  );\n\n  const handleRecordEdit = React.useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      const recordIndex = getRecordIndex(record.id, column.id);\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        const _record = columns[columnIndex].records[recordIndex!];\n        _record.title = record.title;\n        _record.description = record.description;\n        _record.color = record.color;\n        return columns;\n      });\n    },\n    [getColumnIndex, getRecordIndex, cloneColumns]\n  );\n\n  const handleRecordDelete = React.useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      const recordIndex = getRecordIndex(record.id, column.id);\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].records.splice(recordIndex!, 1);\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex, getRecordIndex]\n  );\n\n  const handleAllRecordDelete = React.useCallback(\n    ({ column }: { column: Column }) => {\n      const columnIndex = getColumnIndex(column.id);\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].records = [];\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex]\n  );\n\n  React.useEffect(() => {\n    StorageService.setColumns(columns);\n  }, [columns]);\n\n  return (\n    <>  \n      <Toolbar\n        clearButtonDisabled={!columns.length}\n        onNewColumn={handleAddColumn}\n        onClearBoard={handleClearBoard}\n      />\n      <div className={classes.toolbar} />\n      <Box padding={1}>\n        <KanbanBoard\n          columns={columns}\n          onColumnMove={handleColumnMove}\n          onColumnEdit={handleColumnEdit}\n          onColumnDelete={handleColumnDelete}\n          onCardMove={handleCardMove}\n          onAddRecord={handleAddRecord}\n          onRecordEdit={handleRecordEdit}\n          onRecordDelete={handleRecordDelete}\n          onAllRecordDelete={handleAllRecordDelete}\n        />\n      </Box> \n    </>\n  );\n};\n\nexport default KanbanBoardContainer;\n","import React from \"react\";\n\nimport ThemeProvider from \"PersonalKanban/providers/ThemeProvider\";\nimport KanbanBoardContainer from \"PersonalKanban/containers/KanbanBoard\";\nimport TranslationProvider from \"./providers/TranslationProvider\";\nimport { TitleContextProvider } from \"PersonalKanban/containers/KanbanBoard/title\";\n\ninterface PersonalKanbanProps {}\n\nconst PersonalKanban: React.FC<PersonalKanbanProps> = () => {\n  return (\n    <ThemeProvider>\n      <TranslationProvider>\n        <TitleContextProvider>\n          <KanbanBoardContainer />\n        </TitleContextProvider>\n      </TranslationProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default PersonalKanban;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport PersonalKanban from \"./PersonalKanban\";\n// import reportWebVitals from \"./reportWebVitals\";\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersonalKanban />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// serviceWorkerRegistration.register();\n// reportWebVitals();\n"],"sourceRoot":""}